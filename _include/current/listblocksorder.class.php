<?php
class ListBlocksOrder extends CHtmlBlock
{
    static $langsPage = false;
    static $module = '';
    static $tmpl = '';
    static $urlParams = '';
    static $itemsList = '';
    static $minNumberItemProfileMenuBig = 4;
    static $numberItemProfileMenuBig = 7;

    static $listIconSvg = array(
        'user' => '<svg viewBox="0 0 1792 1792">
                                        <path d="M1600 1405q0 120-73 189.5t-194 69.5h-874q-121 0-194-69.5t-73-189.5q0-53 3.5-103.5t14-109 26.5-108.5 43-97.5 62-81 85.5-53.5 111.5-20q9 0 42 21.5t74.5 48 108 48 133.5 21.5 133.5-21.5 108-48 74.5-48 42-21.5q61 0 111.5 20t85.5 53.5 62 81 43 97.5 26.5 108.5 14 109 3.5 103.5zm-320-893q0 159-112.5 271.5t-271.5 112.5-271.5-112.5-112.5-271.5 112.5-271.5 271.5-112.5 271.5 112.5 112.5 271.5z"/>
                                    </svg>',
        'user_circle' => '<svg class="sm" viewBox="0 0 24 24">
                                        <path d="M12 0c-6.627 0-12 5.373-12 12s5.373 12 12 12 12-5.373 12-12-5.373-12-12-12zm0 22c-3.123 0-5.914-1.441-7.749-3.69.259-.588.783-.995 1.867-1.246 2.244-.518 4.459-.981 3.393-2.945-3.155-5.82-.899-9.119 2.489-9.119 3.322 0 5.634 3.177 2.489 9.119-1.035 1.952 1.1 2.416 3.393 2.945 1.082.25 1.61.655 1.871 1.241-1.836 2.253-4.628 3.695-7.753 3.695z"/>
                                    </svg>',
        'user_circle_o' => '<svg class="sm" viewBox="0 0 24 24">
                                        <path d="M12 0c-6.627 0-12 5.373-12 12s5.373 12 12 12 12-5.373 12-12-5.373-12-12-12zm7.753 18.305c-.261-.586-.789-.991-1.871-1.241-2.293-.529-4.428-.993-3.393-2.945 3.145-5.942.833-9.119-2.489-9.119-3.388 0-5.644 3.299-2.489 9.119 1.066 1.964-1.148 2.427-3.393 2.945-1.084.25-1.608.658-1.867 1.246-1.405-1.723-2.251-3.919-2.251-6.31 0-5.514 4.486-10 10-10s10 4.486 10 10c0 2.389-.845 4.583-2.247 6.305z"/>
                                    </svg>',
        'groups' => '<svg  viewBox="0 0 32 32">
                                        <g id="background"><rect fill="none" height="32" width="32"/></g><g id="group_x5F_half"><g><path d="M20,16c-0.75,0-8,0-8,0s-2,0-2,2c0,0.778,0,12,0,12h12V18C22,18,22,16,20,16z"/></g><g><circle cx="16" cy="11" r="3"/></g><g><circle cx="8" cy="5" r="3"/></g><g><path d="M12,14h0.023C11.39,13.162,11,12.131,11,11c0-0.343,0.035-0.677,0.101-1C8.968,10,4,10,4,10s-2,0-2,2c0,0.778,0,12,0,12h6    v-6C8,14,12,14,12,14z"/></g><g><path d="M30,12c0,0,0-2-2-2c-0.587,0-5.143,0-7.101,0C20.965,10.323,21,10.657,21,11c0,1.131-0.39,2.162-1.022,3H20c4,0,4,4,4,4v6    h6V12z"/></g><g><circle cx="24" cy="5" r="3"/></g></g>
                                    </svg>',
        'groups_my' => '<svg viewBox="0 0 32 32">
                                        <g id="background"><rect fill="none" height="32" width="32"/></g><g id="group_x5F_half_x5F_security"><path d="M16,14c1.657,0,3-1.343,3-3s-1.343-3-3-3s-3,1.343-3,3S14.343,14,16,14z M24,8c1.657,0,3-1.343,3-3s-1.343-3-3-3   s-3,1.343-3,3S22.343,8,24,8z M12.023,14C11.39,13.162,11,12.131,11,11c0-0.343,0.035-0.677,0.101-1C8.968,10,4,10,4,10s-2,0-2,2   c0,0.778,0,12,0,12h6v-6c0-4,4-4,4-4H12.023z M8,8c1.657,0,3-1.343,3-3S9.657,2,8,2S5,3.343,5,5S6.343,8,8,8z M30,17.349V12   c0,0,0-2-2-2h-7.101C20.965,10.323,21,10.657,21,11c0,1.131-0.39,2.162-1.022,3H20c0.477,0,0.878,0.073,1.246,0.173   c-1.457,0.288-2.787,0.928-3.898,1.827C15.008,16,12,16,12,16s-2,0-2,2c0,0.778,0,12,0,12h7.349c1.545,1.248,3.51,1.999,5.651,2   c4.971-0.002,8.998-4.029,9-9C31.999,20.858,31.248,18.894,30,17.349z M23,29.883c-3.801-0.009-6.876-3.084-6.885-6.883   c0.009-3.801,3.084-6.876,6.885-6.885c3.799,0.009,6.874,3.084,6.883,6.885C29.874,26.799,26.799,29.874,23,29.883z"/><path d="M26.144,22c0.008-0.131,0.014-0.267,0.014-0.409c-0.006-0.678-0.088-1.492-0.556-2.259   c-0.457-0.779-1.438-1.36-2.602-1.333c-1.165-0.027-2.148,0.554-2.605,1.333c-0.47,0.767-0.552,1.581-0.556,2.259   c0,0.143,0.006,0.278,0.014,0.409H19v5h8v-5H26.144z M21.837,21.591c-0.004-0.478,0.093-0.958,0.254-1.198   c0.173-0.227,0.27-0.366,0.909-0.394c0.637,0.027,0.73,0.165,0.904,0.394c0.162,0.24,0.259,0.723,0.253,1.198   c0,0.145-0.008,0.28-0.019,0.409h-2.282C21.846,21.869,21.837,21.732,21.837,21.591z"/></g>
                                    </svg>',
        'group_create' => '<svg viewBox="0 0 32 32">
                                        <path d="M16,14c1.657,0,3-1.343,3-3s-1.343-3-3-3s-3,1.343-3,3S14.343,14,16,14z M24,8c1.657,0,3-1.343,3-3s-1.343-3-3-3   s-3,1.343-3,3S22.343,8,24,8z M12.023,14C11.39,13.162,11,12.131,11,11c0-0.343,0.035-0.677,0.101-1C8.968,10,4,10,4,10s-2,0-2,2   c0,0.778,0,12,0,12h6v-6c0-4,4-4,4-4H12.023z M8,8c1.657,0,3-1.343,3-3S9.657,2,8,2S5,3.343,5,5S6.343,8,8,8z M30,17.349V12   c0,0,0-2-2-2h-7.101C20.965,10.323,21,10.657,21,11c0,1.131-0.39,2.162-1.022,3H20c0.477,0,0.878,0.073,1.246,0.173   c-1.457,0.288-2.787,0.928-3.898,1.827C15.008,16,12,16,12,16s-2,0-2,2c0,0.778,0,12,0,12h7.349c1.545,1.248,3.51,1.999,5.651,2   c4.971-0.002,8.998-4.029,9-9C31.999,20.858,31.248,18.894,30,17.349z M23,29.883c-3.801-0.009-6.876-3.084-6.885-6.883   c0.009-3.801,3.084-6.876,6.885-6.885c3.799,0.009,6.874,3.084,6.883,6.885C29.874,26.799,26.799,29.874,23,29.883z"></path>
                                        <polygon points="28,22 24.002,22 24.002,18 22,18 22,22 18,22 18,24 22,24 22,28 24.002,28 24.002,24 28,24   "></polygon>
                                    </svg>',
        'timeline' => '<svg viewBox="-80 60 950 950">
                                        <path d="M0 192v128h768v-128h-768z m0 384h768v-128h-768v128z m0 256h768v-128h-768v128z"/>
                                    </svg>',
        'search' => '<svg viewBox="0 0 1024 1024">
                                        <path d="M960 832L710.875 582.875C746.438 524.812 768 457.156 768 384 768 171.96900000000005 596 0 384 0 171.969 0 0 171.96900000000005 0 384c0 212 171.969 384 384 384 73.156 0 140.812-21.562 198.875-57L832 960c17.5 17.5 46.5 17.375 64 0l64-64C977.5 878.5 977.5 849.5 960 832zM384 640c-141.375 0-256-114.625-256-256s114.625-256 256-256 256 114.625 256 256S525.375 640 384 640z"/>
                                    </svg>',
        'blogs' => '<svg viewBox="0 0 48 48">
                                        <g>
                                            <polygon points="15.25,6.059 14,6.059 12.625,6.059 11,6.059 8,6.059 8,12.083 37.292,12.083 40,12.083 42,12.083    42,38.059 48,38.059 48,34.059 48,33.621 48,6.059  "/>
                                            <path d="M0,42.941h39.083v-28H0V42.941z M4,21.941h31v4H4V21.941z M4,29.941h31v4H4V29.941z"/>
                                        </g>
                                    </svg>',
        'blogs_my' => '<svg viewBox="0 0 32 32">
                                        <g><rect fill="none" height="32" width="32"/></g>
                                        <g>
                                            <path d="M30,2v22H10.416l-6.002,6H2l0,0L2,2 M9.583,22H28V4H4v23.583L9.583,22z"/>
                                            <rect height="2" width="18" x="8" y="8"/>
                                            <rect height="2" width="18" x="8" y="12"/>
                                            <rect height="2" width="12" x="8" y="16"/>
                                        </g>
                                    </svg>',
        'blogs_add' => '<svg viewBox="0 0 32 32">
                                        <g><rect fill="none" height="32" width="32"/></g>
                                        <g>
                                            <path d="M26,8H8v2h18V8z M26,12H8v2h15h3V12z M30,17.35V2H2l0,28h2.414l6.002-6h3.643c0.498,4.498,4.309,7.998,8.941,8   c4.97-0.002,8.998-4.03,9-9C31.999,20.858,31.248,18.895,30,17.35z M14.059,22H9.584L4,27.583V4h24v11.518   C26.569,14.56,24.851,14,23,14c-2.143,0-4.106,0.751-5.652,2H8v2h7.517C14.735,19.169,14.221,20.531,14.059,22z M23,29.882   c-3.801-0.008-6.876-3.083-6.884-6.882c0.008-3.801,3.083-6.876,6.884-6.885c3.799,0.009,6.874,3.084,6.882,6.885   C29.874,26.799,26.799,29.874,23,29.882z"/><g><polygon points="28,22 24.002,22 24.002,18 22,18 22,22 18,22 18,24 22,24 22,28 24.002,28 24.002,24 28,24   "/>
                                        </g>
                                    </svg>',
        'film' => '<svg class="sm" viewBox="0 0 1792 1792">
                                        <path d="M320 1600v-128q0-26-19-45t-45-19h-128q-26 0-45 19t-19 45v128q0 26 19 45t45 19h128q26 0 45-19t19-45zm0-384v-128q0-26-19-45t-45-19h-128q-26 0-45 19t-19 45v128q0 26 19 45t45 19h128q26 0 45-19t19-45zm0-384v-128q0-26-19-45t-45-19h-128q-26 0-45 19t-19 45v128q0 26 19 45t45 19h128q26 0 45-19t19-45zm1024 768v-512q0-26-19-45t-45-19h-768q-26 0-45 19t-19 45v512q0 26 19 45t45 19h768q26 0 45-19t19-45zm-1024-1152v-128q0-26-19-45t-45-19h-128q-26 0-45 19t-19 45v128q0 26 19 45t45 19h128q26 0 45-19t19-45zm1408 1152v-128q0-26-19-45t-45-19h-128q-26 0-45 19t-19 45v128q0 26 19 45t45 19h128q26 0 45-19t19-45zm-384-768v-512q0-26-19-45t-45-19h-768q-26 0-45 19t-19 45v512q0 26 19 45t45 19h768q26 0 45-19t19-45zm384 384v-128q0-26-19-45t-45-19h-128q-26 0-45 19t-19 45v128q0 26 19 45t45 19h128q26 0 45-19t19-45zm0-384v-128q0-26-19-45t-45-19h-128q-26 0-45 19t-19 45v128q0 26 19 45t45 19h128q26 0 45-19t19-45zm0-384v-128q0-26-19-45t-45-19h-128q-26 0-45 19t-19 45v128q0 26 19 45t45 19h128q26 0 45-19t19-45zm128-160v1344q0 66-47 113t-113 47h-1600q-66 0-113-47t-47-113v-1344q0-66 47-113t113-47h1600q66 0 113 47t47 113z"/>
                                    </svg>',
        'file_video' => '<svg class="sm" viewBox="0 0 1792 1792">
                                        <path d="M1596 380q28 28 48 76t20 88v1152q0 40-28 68t-68 28h-1344q-40 0-68-28t-28-68v-1600q0-40 28-68t68-28h896q40 0 88 20t76 48zm-444-244v376h376q-10-29-22-41l-313-313q-12-12-41-22zm384 1528v-1024h-416q-40 0-68-28t-28-68v-416h-768v1536h1280zm-640-896q52 0 90 38t38 90v384q0 52-38 90t-90 38h-384q-52 0-90-38t-38-90v-384q0-52 38-90t90-38h384zm492 2q20 8 20 30v576q0 22-20 30-8 2-12 2-14 0-23-9l-265-266v-90l265-266q9-9 23-9 4 0 12 2z"/>
                                    </svg>',
        'video_camera' => '<svg class="sm" viewBox="0 0 1792 1792">
                                        <path d="M1792 352v1088q0 42-39 59-13 5-25 5-27 0-45-19l-403-403v166q0 119-84.5 203.5t-203.5 84.5h-704q-119 0-203.5-84.5t-84.5-203.5v-704q0-119 84.5-203.5t203.5-84.5h704q119 0 203.5 84.5t84.5 203.5v165l403-402q18-19 45-19 12 0 25 5 39 17 39 59z"/>
                                    </svg>',
        'picture' => '<svg class="sm" viewBox="0 0 1792 1792">
                                        <path d="M576 576q0 80-56 136t-136 56-136-56-56-136 56-136 136-56 136 56 56 136zm1024 384v448h-1408v-192l320-320 160 160 512-512zm96-704h-1600q-13 0-22.5 9.5t-9.5 22.5v1216q0 13 9.5 22.5t22.5 9.5h1600q13 0 22.5-9.5t9.5-22.5v-1216q0-13-9.5-22.5t-22.5-9.5zm160 32v1216q0 66-47 113t-113 47h-1600q-66 0-113-47t-47-113v-1216q0-66 47-113t113-47h1600q66 0 113 47t47 113z"/>
                                    </svg>',
        'file_picture' => '<svg class="sm" viewBox="0 0 1792 1792">
                                        <path d="M1596 380q28 28 48 76t20 88v1152q0 40-28 68t-68 28h-1344q-40 0-68-28t-28-68v-1600q0-40 28-68t68-28h896q40 0 88 20t76 48zm-444-244v376h376q-10-29-22-41l-313-313q-12-12-41-22zm384 1528v-1024h-416q-40 0-68-28t-28-68v-416h-768v1536h1280zm-128-448v320h-1024v-192l192-192 128 128 384-384zm-832-192q-80 0-136-56t-56-136 56-136 136-56 136 56 56 136-56 136-136 56z"/>
                                    </svg>',
        'camera' => '<svg viewBox="0 0 32 32">
                                        <g transform="translate(48 48)">
                                            <path d="M-27.281-30.199c0,2.596-2.104,4.701-4.7,4.701c-2.597,0-4.701-2.105-4.701-4.701c0-2.596,2.104-4.701,4.701-4.701   C-29.385-34.9-27.281-32.794-27.281-30.199z"/><path d="M-18.158-39.468h-7.768l-0.232-1.813c0-1.035-0.84-1.875-1.875-1.875h-8c-1.034,0-1.875,0.84-1.875,1.875l-0.231,1.813   h-7.705c-0.689,0-1.25,0.528-1.25,1.219v16.125c0,0.69,0.561,1.281,1.25,1.281h27.688c0.689,0,1.25-0.591,1.25-1.281V-38.25   c0-0.69-0.561-1.219-1.25-1.219H-18.158z M-31.996-22.496c-4.244,0-7.688-3.442-7.688-7.688c0-4.245,3.443-7.687,7.688-7.687   c4.246,0,7.689,3.442,7.689,7.687C-24.307-25.938-27.75-22.496-31.996-22.496z M-18.346-36.157h-6.563v-1.938h6.563V-36.157z"/>
                                        </g>
                                    </svg>',
        'globe' => '<svg viewBox="0 0 1792 1792">
                                        <path d="M896 128q209 0 385.5 103t279.5 279.5 103 385.5-103 385.5-279.5 279.5-385.5 103-385.5-103-279.5-279.5-103-385.5 103-385.5 279.5-279.5 385.5-103zm274 521q-2 1-9.5 9.5t-13.5 9.5q2 0 4.5-5t5-11 3.5-7q6-7 22-15 14-6 52-12 34-8 51 11-2-2 9.5-13t14.5-12q3-2 15-4.5t15-7.5l2-22q-12 1-17.5-7t-6.5-21q0 2-6 8 0-7-4.5-8t-11.5 1-9 1q-10-3-15-7.5t-8-16.5-4-15q-2-5-9.5-10.5t-9.5-10.5q-1-2-2.5-5.5t-3-6.5-4-5.5-5.5-2.5-7 5-7.5 10-4.5 5q-3-2-6-1.5t-4.5 1-4.5 3-5 3.5q-3 2-8.5 3t-8.5 2q15-5-1-11-10-4-16-3 9-4 7.5-12t-8.5-14h5q-1-4-8.5-8.5t-17.5-8.5-13-6q-8-5-34-9.5t-33-.5q-5 6-4.5 10.5t4 14 3.5 12.5q1 6-5.5 13t-6.5 12q0 7 14 15.5t10 21.5q-3 8-16 16t-16 12q-5 8-1.5 18.5t10.5 16.5q2 2 1.5 4t-3.5 4.5-5.5 4-6.5 3.5l-3 2q-11 5-20.5-6t-13.5-26q-7-25-16-30-23-8-29 1-5-13-41-26-25-9-58-4 6-1 0-15-7-15-19-12 3-6 4-17.5t1-13.5q3-13 12-23 1-1 7-8.5t9.5-13.5.5-6q35 4 50-11 5-5 11.5-17t10.5-17q9-6 14-5.5t14.5 5.5 14.5 5q14 1 15.5-11t-7.5-20q12 1 3-17-5-7-8-9-12-4-27 5-8 4 2 8-1-1-9.5 10.5t-16.5 17.5-16-5q-1-1-5.5-13.5t-9.5-13.5q-8 0-16 15 3-8-11-15t-24-8q19-12-8-27-7-4-20.5-5t-19.5 4q-5 7-5.5 11.5t5 8 10.5 5.5 11.5 4 8.5 3q14 10 8 14-2 1-8.5 3.5t-11.5 4.5-6 4q-3 4 0 14t-2 14q-5-5-9-17.5t-7-16.5q7 9-25 6l-10-1q-4 0-16 2t-20.5 1-13.5-8q-4-8 0-20 1-4 4-2-4-3-11-9.5t-10-8.5q-46 15-94 41 6 1 12-1 5-2 13-6.5t10-5.5q34-14 42-7l5-5q14 16 20 25-7-4-30-1-20 6-22 12 7 12 5 18-4-3-11.5-10t-14.5-11-15-5q-16 0-22 1-146 80-235 222 7 7 12 8 4 1 5 9t2.5 11 11.5-3q9 8 3 19 1-1 44 27 19 17 21 21 3 11-10 18-1-2-9-9t-9-4q-3 5 .5 18.5t10.5 12.5q-7 0-9.5 16t-2.5 35.5-1 23.5l2 1q-3 12 5.5 34.5t21.5 19.5q-13 3 20 43 6 8 8 9 3 2 12 7.5t15 10 10 10.5q4 5 10 22.5t14 23.5q-2 6 9.5 20t10.5 23q-1 0-2.5 1t-2.5 1q3 7 15.5 14t15.5 13q1 3 2 10t3 11 8 2q2-20-24-62-15-25-17-29-3-5-5.5-15.5t-4.5-14.5q2 0 6 1.5t8.5 3.5 7.5 4 2 3q-3 7 2 17.5t12 18.5 17 19 12 13q6 6 14 19.5t0 13.5q9 0 20 10t17 20q5 8 8 26t5 24q2 7 8.5 13.5t12.5 9.5l16 8 13 7q5 2 18.5 10.5t21.5 11.5q10 4 16 4t14.5-2.5 13.5-3.5q15-2 29 15t21 21q36 19 55 11-2 1 .5 7.5t8 15.5 9 14.5 5.5 8.5q5 6 18 15t18 15q6-4 7-9-3 8 7 20t18 10q14-3 14-32-31 15-49-18 0-1-2.5-5.5t-4-8.5-2.5-8.5 0-7.5 5-3q9 0 10-3.5t-2-12.5-4-13q-1-8-11-20t-12-15q-5 9-16 8t-16-9q0 1-1.5 5.5t-1.5 6.5q-13 0-15-1 1-3 2.5-17.5t3.5-22.5q1-4 5.5-12t7.5-14.5 4-12.5-4.5-9.5-17.5-2.5q-19 1-26 20-1 3-3 10.5t-5 11.5-9 7q-7 3-24 2t-24-5q-13-8-22.5-29t-9.5-37q0-10 2.5-26.5t3-25-5.5-24.5q3-2 9-9.5t10-10.5q2-1 4.5-1.5t4.5 0 4-1.5 3-6q-1-1-4-3-3-3-4-3 7 3 28.5-1.5t27.5 1.5q15 11 22-2 0-1-2.5-9.5t-.5-13.5q5 27 29 9 3 3 15.5 5t17.5 5q3 2 7 5.5t5.5 4.5 5-.5 8.5-6.5q10 14 12 24 11 40 19 44 7 3 11 2t4.5-9.5 0-14-1.5-12.5l-1-8v-18l-1-8q-15-3-18.5-12t1.5-18.5 15-18.5q1-1 8-3.5t15.5-6.5 12.5-8q21-19 15-35 7 0 11-9-1 0-5-3t-7.5-5-4.5-2q9-5 2-16 5-3 7.5-11t7.5-10q9 12 21 2 7-8 1-16 5-7 20.5-10.5t18.5-9.5q7 2 8-2t1-12 3-12q4-5 15-9t13-5l17-11q3-4 0-4 18 2 31-11 10-11-6-20 3-6-3-9.5t-15-5.5q3-1 11.5-.5t10.5-1.5q15-10-7-16-17-5-43 12zm-163 877q206-36 351-189-3-3-12.5-4.5t-12.5-3.5q-18-7-24-8 1-7-2.5-13t-8-9-12.5-8-11-7q-2-2-7-6t-7-5.5-7.5-4.5-8.5-2-10 1l-3 1q-3 1-5.5 2.5t-5.5 3-4 3 0 2.5q-21-17-36-22-5-1-11-5.5t-10.5-7-10-1.5-11.5 7q-5 5-6 15t-2 13q-7-5 0-17.5t2-18.5q-3-6-10.5-4.5t-12 4.5-11.5 8.5-9 6.5-8.5 5.5-8.5 7.5q-3 4-6 12t-5 11q-2-4-11.5-6.5t-9.5-5.5q2 10 4 35t5 38q7 31-12 48-27 25-29 40-4 22 12 26 0 7-8 20.5t-7 21.5q0 6 2 16z"/>
                                    </svg>',
        'map_marker' => '<svg viewBox="0 0 1792 1792">
                                        <path d="M1152 640q0-106-75-181t-181-75-181 75-75 181 75 181 181 75 181-75 75-181zm256 0q0 109-33 179l-364 774q-16 33-47.5 52t-67.5 19-67.5-19-46.5-52l-365-774q-33-70-33-179 0-212 150-362t362-150 362 150 150 362z"/>
                                    </svg>',
        'gamepad' => '<svg viewBox="0 0 512 512">
                                        <path d="M377.8,100.1C332.9,86.8,318.8,112,256,112s-76.9-25.3-121.8-11.9c-44.9,13.3-67.3,60.4-88.5,148.8  c-21.2,88.5-17.3,152.4,7.7,164.3c25,11.9,53.2-15.4,80.1-49.1C155.3,337.7,166.2,336,256,336c89.7,0,99,0.7,122.5,28.1  c26.9,33.7,55.1,61,80.1,49.1c25-11.9,28.9-75.8,7.7-164.3C445.1,160.5,422.6,113.5,377.8,100.1z M128.2,263.7  c-21.7,0-39.3-17.7-39.3-39.6c0-21.8,17.6-39.6,39.3-39.6c21.7,0,39.3,17.8,39.3,39.6S149.9,263.7,128.2,263.7z M309.7,243.6  c-10.6,0-19.3-8.7-19.3-19.4c0-10.7,8.7-19.4,19.3-19.4c10.7,0,19.4,8.7,19.4,19.4C329,234.9,320.4,243.6,309.7,243.6z M351.9,286  c-10.6,0-19.3-8.7-19.3-19.4c0-10.8,8.7-19.4,19.3-19.4c10.7,0,19.4,8.7,19.4,19.4C371.3,277.4,362.6,286,351.9,286z M351.9,201.1  c-10.6,0-19.3-8.7-19.3-19.4c0-10.7,8.7-19.4,19.3-19.4c10.7,0,19.4,8.7,19.4,19.4C371.3,192.4,362.6,201.1,351.9,201.1z   M394.2,243.6c-10.7,0-19.3-8.7-19.3-19.4c0-10.7,8.7-19.4,19.3-19.4c10.6,0,19.3,8.7,19.3,19.4  C413.5,234.9,404.9,243.6,394.2,243.6z"/>
                                    </svg>',
        'users' => '<svg class="sm" viewBox="0 0 1792 1792">
                                        <path d="M529 896q-162 5-265 128h-134q-82 0-138-40.5t-56-118.5q0-353 124-353 6 0 43.5 21t97.5 42.5 119 21.5q67 0 133-23-5 37-5 66 0 139 81 256zm1071 637q0 120-73 189.5t-194 69.5h-874q-121 0-194-69.5t-73-189.5q0-53 3.5-103.5t14-109 26.5-108.5 43-97.5 62-81 85.5-53.5 111.5-20q10 0 43 21.5t73 48 107 48 135 21.5 135-21.5 107-48 73-48 43-21.5q61 0 111.5 20t85.5 53.5 62 81 43 97.5 26.5 108.5 14 109 3.5 103.5zm-1024-1277q0 106-75 181t-181 75-181-75-75-181 75-181 181-75 181 75 75 181zm704 384q0 159-112.5 271.5t-271.5 112.5-271.5-112.5-112.5-271.5 112.5-271.5 271.5-112.5 271.5 112.5 112.5 271.5zm576 225q0 78-56 118.5t-138 40.5h-134q-103-123-265-128 81-117 81-256 0-29-5-66 66 23 133 23 59 0 119-21.5t97.5-42.5 43.5-21q124 0 124 353zm-128-609q0 106-75 181t-181 75-181-75-75-181 75-181 181-75 181 75 75 181z"/>
                                    </svg>',
        'user_plus' => '<svg viewBox="0 0 1792 1792">
                                        <path d="M576 896q-159 0-271.5-112.5t-112.5-271.5 112.5-271.5 271.5-112.5 271.5 112.5 112.5 271.5-112.5 271.5-271.5 112.5zm960 128h352q13 0 22.5 9.5t9.5 22.5v192q0 13-9.5 22.5t-22.5 9.5h-352v352q0 13-9.5 22.5t-22.5 9.5h-192q-13 0-22.5-9.5t-9.5-22.5v-352h-352q-13 0-22.5-9.5t-9.5-22.5v-192q0-13 9.5-22.5t22.5-9.5h352v-352q0-13 9.5-22.5t22.5-9.5h192q13 0 22.5 9.5t9.5 22.5v352zm-736 224q0 52 38 90t90 38h256v238q-68 50-171 50h-874q-121 0-194-69t-73-190q0-53 3.5-103.5t14-109 26.5-108.5 43-97.5 62-81 85.5-53.5 111.5-20q19 0 39 17 79 61 154.5 91.5t164.5 30.5 164.5-30.5 154.5-91.5q20-17 39-17 132 0 217 96h-223q-52 0-90 38t-38 90v192z"/>
                                    </svg>',
        'user_times' => '<svg viewBox="0 0 1792 1792">
                                        <path d="M576 896q-159 0-271.5-112.5t-112.5-271.5 112.5-271.5 271.5-112.5 271.5 112.5 112.5 271.5-112.5 271.5-271.5 112.5zm1077 320l249 249q9 9 9 23 0 13-9 22l-136 136q-9 9-22 9-14 0-23-9l-249-249-249 249q-9 9-23 9-13 0-22-9l-136-136q-9-9-9-22 0-14 9-23l249-249-249-249q-9-9-9-23 0-13 9-22l136-136q9-9 22-9 14 0 23 9l249 249 249-249q9-9 23-9 13 0 22 9l136 136q9 9 9 22 0 14-9 23zm-498 0l-181 181q-37 37-37 91 0 53 37 90l83 83q-21 3-44 3h-874q-121 0-194-69t-73-190q0-53 3.5-103.5t14-109 26.5-108.5 43-97.5 62-81 85.5-53.5 111.5-20q19 0 39 17 154 122 319 122t319-122q20-17 39-17 28 0 57 6-28 27-41 50t-13 56q0 54 37 91z"/>
                                    </svg>',
        'star' => '<svg viewBox="0 0 32 32">
                                        <path d="M16 0 L21 11 L32 12 L23 19 L26 31 L16 25 L6 31 L9 19 L0 12 L11 11"/>
                                    </svg>',
        'cog' => '<svg viewBox="0 0 32 32">
                                        <path d="M14 0 H18 L19 6 L20.707 6.707 L26 3.293 L28.707 6 L25.293 11.293 L26 13 L32 14 V18 L26 19 L25.293 20.707 L28.707 26 L26 28.707 L20.707 25.293 L19 26 L18 32 L14 32 L13 26 L11.293 25.293 L6 28.707 L3.293 26 L6.707 20.707 L6 19 L0 18 L0 14 L6 13 L6.707 11.293 L3.293 6 L6 3.293 L11.293 6.707 L13 6 L14 0 z M16 10 A6 6 0 0 0 16 22 A6 6 0 0 0 16 10"/>
                                    </svg>',
        'times_circle' => '<svg viewBox="0 0 1792 1792">
                                        <path d="M1277 1122q0-26-19-45l-181-181 181-181q19-19 19-45 0-27-19-46l-90-90q-19-19-46-19-26 0-45 19l-181 181-181-181q-19-19-45-19-27 0-46 19l-90 90q-19 19-19 46 0 26 19 45l181 181-181 181q-19 19-19 45 0 27 19 46l90 90q19 19 46 19 26 0 45-19l181-181 181 181q19 19 45 19 27 0 46-19l90-90q19-19 19-46zm387-226q0 209-103 385.5t-279.5 279.5-385.5 103-385.5-103-279.5-279.5-103-385.5 103-385.5 279.5-279.5 385.5-103 385.5 103 279.5 279.5 103 385.5z"/>
                                    </svg>',
        'file_text' => '<svg class="sm" viewBox="0 0 1792 1792">
                                        <path d="M1596 476q14 14 28 36h-472v-472q22 14 36 28zm-476 164h544v1056q0 40-28 68t-68 28h-1344q-40 0-68-28t-28-68v-1600q0-40 28-68t68-28h800v544q0 40 28 68t68 28zm160 736v-64q0-14-9-23t-23-9h-704q-14 0-23 9t-9 23v64q0 14 9 23t23 9h704q14 0 23-9t9-23zm0-256v-64q0-14-9-23t-23-9h-704q-14 0-23 9t-9 23v64q0 14 9 23t23 9h704q14 0 23-9t9-23zm0-256v-64q0-14-9-23t-23-9h-704q-14 0-23 9t-9 23v64q0 14 9 23t23 9h704q14 0 23-9t9-23z"/>
                                    </svg>',
        'file_text_o' => '<svg class="sm" viewBox="0 0 1792 1792">
                                        <path d="M1596 380q28 28 48 76t20 88v1152q0 40-28 68t-68 28h-1344q-40 0-68-28t-28-68v-1600q0-40 28-68t68-28h896q40 0 88 20t76 48zm-444-244v376h376q-10-29-22-41l-313-313q-12-12-41-22zm384 1528v-1024h-416q-40 0-68-28t-28-68v-416h-768v1536h1280zm-1024-864q0-14 9-23t23-9h704q14 0 23 9t9 23v64q0 14-9 23t-23 9h-704q-14 0-23-9t-9-23v-64zm736 224q14 0 23 9t9 23v64q0 14-9 23t-23 9h-704q-14 0-23-9t-9-23v-64q0-14 9-23t23-9h704zm0 256q14 0 23 9t9 23v64q0 14-9 23t-23 9h-704q-14 0-23-9t-9-23v-64q0-14 9-23t23-9h704z"/>
                                    </svg>',
        'plus_square' => '<svg class="sm" viewBox="0 0 1792 1792">
                                        <path d="M1408 960v-128q0-26-19-45t-45-19h-320v-320q0-26-19-45t-45-19h-128q-26 0-45 19t-19 45v320h-320q-26 0-45 19t-19 45v128q0 26 19 45t45 19h320v320q0 26 19 45t45 19h128q26 0 45-19t19-45v-320h320q26 0 45-19t19-45zm256-544v960q0 119-84.5 203.5t-203.5 84.5h-960q-119 0-203.5-84.5t-84.5-203.5v-960q0-119 84.5-203.5t203.5-84.5h960q119 0 203.5 84.5t84.5 203.5z"/>
                                    </svg>',
        'calendar' => '<svg class="sm" viewBox="0 0 1792 1792">
                                        <path d="M192 1664h288v-288h-288v288zm352 0h320v-288h-320v288zm-352-352h288v-320h-288v320zm352 0h320v-320h-320v320zm-352-384h288v-288h-288v288zm736 736h320v-288h-320v288zm-384-736h320v-288h-320v288zm768 736h288v-288h-288v288zm-384-352h320v-320h-320v320zm-352-864v-288q0-13-9.5-22.5t-22.5-9.5h-64q-13 0-22.5 9.5t-9.5 22.5v288q0 13 9.5 22.5t22.5 9.5h64q13 0 22.5-9.5t9.5-22.5zm736 864h288v-320h-288v320zm-384-384h320v-288h-320v288zm384 0h288v-288h-288v288zm32-480v-288q0-13-9.5-22.5t-22.5-9.5h-64q-13 0-22.5 9.5t-9.5 22.5v288q0 13 9.5 22.5t22.5 9.5h64q13 0 22.5-9.5t9.5-22.5zm384-64v1280q0 52-38 90t-90 38h-1408q-52 0-90-38t-38-90v-1280q0-52 38-90t90-38h128v-96q0-66 47-113t113-47h64q66 0 113 47t47 113v96h384v-96q0-66 47-113t113-47h64q66 0 113 47t47 113v96h128q52 0 90 38t38 90z"/>
                                    </svg>',
        'calendar_plus' => '<svg class="sm" viewBox="0 0 1792 1792">
                                        <path d="M1536 256q52 0 90 38t38 90v1280q0 52-38 90t-90 38h-1408q-52 0-90-38t-38-90v-1280q0-52 38-90t90-38h128v-96q0-66 47-113t113-47h64q66 0 113 47t47 113v96h384v-96q0-66 47-113t113-47h64q66 0 113 47t47 113v96h128zm-384-96v288q0 14 9 23t23 9h64q14 0 23-9t9-23v-288q0-14-9-23t-23-9h-64q-14 0-23 9t-9 23zm-768 0v288q0 14 9 23t23 9h64q14 0 23-9t9-23v-288q0-14-9-23t-23-9h-64q-14 0-23 9t-9 23zm1152 1504v-1024h-1408v1024h1408zm-640-576h224q14 0 23 9t9 23v64q0 14-9 23t-23 9h-224v224q0 14-9 23t-23 9h-64q-14 0-23-9t-9-23v-224h-224q-14 0-23-9t-9-23v-64q0-14 9-23t23-9h224v-224q0-14 9-23t23-9h64q14 0 23 9t9 23v224z"/>
                                    </svg>',
        'sign_out' => '<svg class="sm" viewBox="0 0 1792 1792">
                                        <path d="M704 1440q0 4 1 20t.5 26.5-3 23.5-10 19.5-20.5 6.5h-320q-119 0-203.5-84.5t-84.5-203.5v-704q0-119 84.5-203.5t203.5-84.5h320q13 0 22.5 9.5t9.5 22.5q0 4 1 20t.5 26.5-3 23.5-10 19.5-20.5 6.5h-320q-66 0-113 47t-47 113v704q0 66 47 113t113 47h312l11.5 1 11.5 3 8 5.5 7 9 2 13.5zm928-544q0 26-19 45l-544 544q-19 19-45 19t-45-19-19-45v-288h-448q-26 0-45-19t-19-45v-384q0-26 19-45t45-19h448v-288q0-26 19-45t45-19 45 19l544 544q19 19 19 45z"/>
                                    </svg>',
        'diamond' => '<svg class="sm" viewBox="0 0 23.71 19.65">
                                        <path d="M23.66,6.06a.48.48,0,0,0,0-.21s0,0,0,0a.5.5,0,0,0-.08-.22v0L20,.39a.47.47,0,0,0,0-.12A.5.5,0,0,0,19.49,0H4.28a.49.49,0,0,0-.2.06h0A.46.46,0,0,0,4,.14a.44.44,0,0,0-.08.07L.09,5.57v0A.5.5,0,0,0,0,5.82H0a.49.49,0,0,0,0,.23s0,0,0,0l0,0a.44.44,0,0,0,0,.07L11.88,19.48l0,0,0,0H12l.05,0h.06l.13,0h0l.15,0h0l.06,0,0,0h0l0,0h0l0,0,0,0,11-13.29a.44.44,0,0,0,0-.06l0,0S23.66,6.07,23.66,6.06ZM11.85,1.37l2.82,4H9l1.72-2.44Zm3.2,5-2.85,11-3.45-11Zm-4,10.7L1.61,6.36H7.7Zm5-10.7h6.06L13.3,17.09Zm.58-1,2.79-4,2.79,4ZM18.46,1,15.67,5,12.88,1ZM9.17,3.44,8.07,5,5.69,1.62,5.25,1h5.64ZM4.28,1.37,6.67,4.74l.44.62H1.46Z"/>
                                    </svg>',
        'graduation_cap' => '<svg class="sm" viewBox="0 0 30 30">
                                        <polygon points="15.472,3.12 15,4 15,11 29,11 29.462,10.114 "/>
                                        <polygon points="14.528,3.12 15,4 15,11 1,11 0.538,10.114 "/>
                                        <polygon points="14.528,18.88 15,18 15,11 1,11 0.538,11.886 "/>
                                        <polygon points="15.472,18.88 15,18 15,11 29,11 29.462,11.886 "/>
                                        <circle cx="29" cy="11" r="1"/><circle cx="1" cy="11" r="1"/>
                                        <circle cx="15" cy="18" r="1"/><circle cx="15" cy="4" r="1"/>
                                        <g><path d="M16.366,20.669c-0.084,0.042-0.169,0.077-0.255,0.106C15.749,20.924,15.377,21,15,21c-0.376,0-0.747-0.075-1.107-0.224   c-0.087-0.029-0.174-0.065-0.259-0.108L6,16.852V21c0,2.761,4.029,5,9,5s9-2.239,9-5v-4.148L16.366,20.669z"/><path d="M27,15.353V26c0,0.553,0.448,1,1,1s1-0.447,1-1V14.353L27,15.353z"/></g><path d="M30,26c0,1.105-2,4-2,4s-2-2.895-2-4s0.895-2,2-2S30,24.895,30,26z"/>
                                    </svg>',
        'ban' => '<svg viewBox="0 0 48 48">
                                        <path d="M0 0h48v48h-48z" fill="none"/>
                                        <path d="M24 4c-11.05 0-20 8.95-20 20s8.95 20 20 20 20-8.95 20-20-8.95-20-20-20zm-16 20c0-8.84 7.16-16 16-16 3.7 0 7.09 1.27 9.8 3.37l-22.43 22.43c-2.1-2.71-3.37-6.1-3.37-9.8zm16 16c-3.7 0-7.09-1.27-9.8-3.37l22.43-22.43c2.1 2.71 3.37 6.1 3.37 9.8 0 8.84-7.16 16-16 16z"/>
                                    </svg>',
        'exclamation_triangle' => '<svg viewBox="0 0 32 32">
                                        <path d="M15 0 H17 L32 29 L31 30 L1 30 L0 29 z M19 8 L13 8 L14 20 L18 20 z M16 22 A3 3 0 0 0 16 28 A3 3 0 0 0 16 22"/>
                                    </svg>',
        'television' => '<svg viewBox="0 0 24 24">
                                        <polygon points="2 17 11 17 11 19 8 19 8 21 16 21 16 19 13 19 13 17 22 17 22 3 2 3 2 17"/>
                                    </svg>',
        'television_finished' => '<svg viewBox="0 0 48 48">
                                        <rect height="16.44" width="30.315" x="8.842" y="20.822"/>
                                        <path d="M32.867,12c-1.732-1.083-3.673-1.858-5.751-2.25l7.855-7.855h-3.572l-7.561,7.561    c-0.1,0.001-0.198,0.009-0.298,0.011L15.97,1.895h-3.573l7.958,7.958c-1.88,0.418-3.638,1.156-5.222,2.147H0v34.105h48V12H32.867z     M41.684,39.789H6.316V18.395h35.368V39.789z"/>
                                    </svg>',
        'live_streaming' => '<svg viewBox="0 0 16 16">
                                        <path d="M8,6c0,1.104-0.896,2-2,2c0,1.104,0.896,2,2,2s2-0.896,2-2S9.104,6,8,6z M8,2C3.898,2,0,6.648,0,8s3.898,6,8,6s8-4.648,8-6  S12.102,2,8,2z M8,12c-2.209,0-4-1.791-4-4s1.791-4,4-4s4,1.791,4,4S10.209,12,8,12z"/>
                                    </svg>',
        'comments' => '<svg viewBox="0 0 1792 1792">
                                        <path d="M1408 768q0 139-94 257t-256.5 186.5-353.5 68.5q-86 0-176-16-124 88-278 128-36 9-86 16h-3q-11 0-20.5-8t-11.5-21q-1-3-1-6.5t.5-6.5 2-6l2.5-5 3.5-5.5 4-5 4.5-5 4-4.5q5-6 23-25t26-29.5 22.5-29 25-38.5 20.5-44q-124-72-195-177t-71-224q0-139 94-257t256.5-186.5 353.5-68.5 353.5 68.5 256.5 186.5 94 257zm384 256q0 120-71 224.5t-195 176.5q10 24 20.5 44t25 38.5 22.5 29 26 29.5 23 25q1 1 4 4.5t4.5 5 4 5 3.5 5.5l2.5 5 2 6 .5 6.5-1 6.5q-3 14-13 22t-22 7q-50-7-86-16-154-40-278-128-90 16-176 16-271 0-472-132 58 4 88 4 161 0 309-45t264-129q125-92 192-212t67-254q0-77-23-152 129 71 204 178t75 230z"/>
                                    </svg>',
        'phone' => '<svg viewBox="0 0 1792 1792">
                                        <path d="M1600 1240q0 27-10 70.5t-21 68.5q-21 50-122 106-94 51-186 51-27 0-52.5-3.5t-57.5-12.5-47.5-14.5-55.5-20.5-49-18q-98-35-175-83-128-79-264.5-215.5t-215.5-264.5q-48-77-83-175-3-9-18-49t-20.5-55.5-14.5-47.5-12.5-57.5-3.5-52.5q0-92 51-186 56-101 106-122 25-11 68.5-21t70.5-10q14 0 21 3 18 6 53 76 11 19 30 54t35 63.5 31 53.5q3 4 17.5 25t21.5 35.5 7 28.5q0 20-28.5 50t-62 55-62 53-28.5 46q0 9 5 22.5t8.5 20.5 14 24 11.5 19q76 137 174 235t235 174q2 1 19 11.5t24 14 20.5 8.5 22.5 5q18 0 46-28.5t53-62 55-62 50-28.5q14 0 28.5 7t35.5 21.5 25 17.5q25 15 53.5 31t63.5 35 54 30q70 35 76 53 3 7 3 21z"/>
                                    </svg>',
        'street_view' => '<svg viewBox="0 0 1792 1792">
                                        <path d="M1536 1536q0 63-61.5 113.5t-164 81-225 46-253.5 15.5-253.5-15.5-225-46-164-81-61.5-113.5q0-49 33-88.5t91-66.5 118-44.5 131-29.5q26-5 48 10.5t26 41.5q5 26-10.5 48t-41.5 26q-58 10-106 23.5t-76.5 25.5-48.5 23.5-27.5 19.5-8.5 12q3 11 27 26.5t73 33 114 32.5 160.5 25 201.5 10 201.5-10 160.5-25 114-33 73-33.5 27-27.5q-1-4-8.5-11t-27.5-19-48.5-23.5-76.5-25-106-23.5q-26-4-41.5-26t-10.5-48q4-26 26-41.5t48-10.5q71 12 131 29.5t118 44.5 91 66.5 33 88.5zm-384-896v384q0 26-19 45t-45 19h-64v384q0 26-19 45t-45 19h-256q-26 0-45-19t-19-45v-384h-64q-26 0-45-19t-19-45v-384q0-53 37.5-90.5t90.5-37.5h384q53 0 90.5 37.5t37.5 90.5zm-96-384q0 93-65.5 158.5t-158.5 65.5-158.5-65.5-65.5-158.5 65.5-158.5 158.5-65.5 158.5 65.5 65.5 158.5z"/>
                                    </svg>',
        'microphone' => '<svg viewBox="0 0 64 64">
                                        <path d="M29.726,40.861h4.549c4.19,0,7.587-3.396,7.587-7.586V7.688c0-4.19-3.396-7.586-7.587-7.586h-4.549   c-4.19,0-7.586,3.396-7.586,7.586v25.587C22.139,37.465,25.535,40.861,29.726,40.861z" fill="#241F20"/><path d="M46.295,23.976h-0.309c-1.26,0-1.367,1.68-1.373,2.113v8.117c0,5.361-4.344,9.705-9.703,9.705h-5.82   c-5.357,0-9.704-4.344-9.704-9.705v-8.632c0-1.659-1.397-1.597-1.397-1.597h-0.331c-0.453,0.047-1.209,0.353-1.209,1.906v9.337   c0,6.607,5.358,11.963,11.963,11.963h1.754v11.287c-0.006,0.336-0.129,1.373-1.438,1.385h-1.304c0,0-1.794-0.072-1.794,1.635v0.668   c0.009,0.379,0.157,1.742,1.937,1.742h8.843c1.725,0,1.941-1.105,1.959-1.553v-0.738c0-1.801-2.031-1.754-2.031-1.754H34.84   c-0.412-0.053-1.007-0.336-1.007-1.518V47.182h1.756c6.606,0,11.962-5.355,11.962-11.963v-9.693   C47.551,24.032,46.295,23.976,46.295,23.976z"/>
                                    </svg>',
        'facebook' => '<svg viewBox="0 0 56.693 56.693">
                                        <path d="M40.43,21.739h-7.645v-5.014c0-1.883,1.248-2.322,2.127-2.322c0.877,0,5.395,0,5.395,0V6.125l-7.43-0.029  c-8.248,0-10.125,6.174-10.125,10.125v5.518h-4.77v8.53h4.77c0,10.947,0,24.137,0,24.137h10.033c0,0,0-13.32,0-24.137h6.77  L40.43,21.739z"/>
                                    </svg>',
        'check_circle' => '<svg class="sm" viewBox="0 0 32 32">
                                        <path d="M16,31A15,15,0,1,1,31,16,15,15,0,0,1,16,31ZM16,3A13,13,0,1,0,29,16,13,13,0,0,0,16,3Z"/>
                                        <path d="M13.67,22a1,1,0,0,1-.73-.32l-4.67-5a1,1,0,0,1,1.46-1.36l3.94,4.21,8.6-9.21a1,1,0,1,1,1.46,1.36l-9.33,10A1,1,0,0,1,13.67,22Z"/>
                                    </svg>',

        'audio' => '<svg class="lg" viewBox="0 0 48 48">
                                        <path d="M0 0h48v48H0z" fill="none"/>
                                        <path d="M30 12H6v4h24v-4zm0 8H6v4h24v-4zM6 32h16v-4H6v4zm28-20v16.37c-.63-.23-1.29-.37-2-.37-3.31 0-6 2.69-6 6s2.69 6 6 6 6-2.69 6-6V16h6v-4H34z"/>
                                    </svg>',
        'audio_my' => '<svg viewBox="0 0 48 48">
                                        <path d="M45.895,26.634h-1.16l0.055-2.209H44.73l0.059-0.974l-0.057,0.039c0.02-0.36,0.057-0.716,0.057-1.079   c0-11.488-9.313-20.8-20.8-20.8c-11.277,0-20.436,8.98-20.768,20.18l-0.031-0.096L3.2,22.222c0,0.063-0.009,0.125-0.009,0.19   c0,0.133,0.011,0.264,0.02,0.397l0.007,0.382H3.191l0.043,0.985l0.046,2.458H2.106c-1.148,0-2.079,1-2.079,2.233v7.95   c0,1.235,0.93,2.233,2.079,2.233h1.399L3.58,43.21h0.325h4.067h1.111v1.129c0,1.133,0.933,2.05,2.081,2.05h4.419   c1.148,0,2.081-0.917,2.081-2.05V25.473c0-1.131-0.932-2.05-2.081-2.05h-4.419c-1.148,0-2.081,0.919-2.081,2.05v1.131H7.527   l-0.055-2.009l-0.043-0.638l0.026-0.004c-0.05-0.511-0.105-1.018-0.105-1.542c0-9.192,7.45-16.641,16.639-16.641   s16.639,7.449,16.639,16.641c0,0.109-0.018,0.214-0.021,0.323l0.013,0.004l-0.12,3.864h-1.646v-1.131c0-1.131-0.932-2.05-2.08-2.05   h-4.419c-1.148,0-2.081,0.919-2.081,2.05v18.866c0,1.133,0.933,2.05,2.081,2.05h4.419c1.148,0,2.08-0.917,2.08-2.05V43.21h1.127   h3.943h0.447v-1.104l0.072-3.055h1.452c1.148,0,2.078-0.998,2.078-2.233v-7.95C47.973,27.634,47.043,26.634,45.895,26.634z"/>
                                    </svg>',
        'audio_add' => '<svg viewBox="0 0 32 32">
                                        <rect fill="none" height="32" width="32"/>
                                        <path d="M28,15.518V4L8,0v16.35C7.373,16.127,6.702,16,6,16c-3.316,0-6,2.691-6,6c0,3.314,2.684,6,6,6c3.311,0,6-2.686,6-6V6l12,2   v6.059C23.671,14.022,23.338,14,23,14c-4.973,0-9,4.027-9,9c0,4.971,4.027,8.998,9,9c4.971-0.002,8.998-4.029,9-9   C31.999,19.879,30.411,17.132,28,15.518z M23,29.883c-3.801-0.009-6.876-3.084-6.885-6.883c0.009-3.801,3.084-6.876,6.885-6.885   c3.799,0.009,6.874,3.084,6.883,6.885C29.874,26.799,26.799,29.874,23,29.883z"/><g><polygon points="28,22 24.002,22 24.002,18 22,18 22,22 18,22 18,24 22,24 22,28 24.002,28 24.002,24 28,24   "/>
                                    </svg>',
        'audio_page' => '<svg viewBox="-3 0 32 32">
                                        <path d="M18.414,0H0v32h24V5.584L18.414,0z M17.998,2.414l3.588,3.587h-3.588V2.414z M2,30V1.999h14V8h6v22H2z"/><path d="M8,10v8.175C7.686,18.063,7.351,18,7,18c-1.658,0-3,1.346-3,3c0,1.657,1.342,3,3,3c1.655,0,3-1.343,3-3v-8l6,1v6.175   C15.686,20.063,15.352,20,15,20c-1.659,0-3,1.346-3,3c0,1.657,1.342,3,3,3c1.654,0,3-1.343,3-3V12L8,10z"/>
                                    </svg>',
        'audio_my_page' => '<svg viewBox="0 0 128 128">
                                        <path d="M113,11H45v63.5c-3.1-2.2-6.9-3.5-11-3.5c-10.5,0-19,8.5-19,19s8.5,19,19,19s19-8.5,19-19V19h52v45.5   c-3.1-2.2-6.9-3.5-11-3.5c-10.5,0-19,8.5-19,19s8.5,19,19,19s19-8.5,19-19V11z M34,101c-6.1,0-11-4.9-11-11s4.9-11,11-11   s11,4.9,11,11S40.1,101,34,101z M94,91c-6.1,0-11-4.9-11-11s4.9-11,11-11s11,4.9,11,11S100.1,91,94,91z"/><rect height="8" width="98" x="15" y="119"/>
                                    </svg>',
        'audio_group' => '<svg viewBox="0 0 32 32">
                                        <rect fill="none"/>
                                        <path d="M30,8V6H10V4H0v28h31.999L32,8H30z M29.999,29.999H2V6h6v4h21.999V29.999z"/><path d="M22,15.219l-10-2.498v7.463C11.686,20.072,11.353,20,11,20c-1.658,0-3,1.346-3,3c0,1.657,1.342,3,3,3c1.655,0,3-1.343,3-3   v-7.72l6,1.501v5.403C19.686,22.072,19.353,22,19,22c-1.658,0-3,1.346-3,3c0,1.657,1.342,3,3,3c1.655,0,3-1.343,3-3V15.219z"/>
                                    </svg>',
        'audio_my_group' => '<svg viewBox="0 0 24 24">
                                        <path d="M22,5H6C4.9,5,4,5.9,4,7v12h2V7h16v13c0,0.6-0.4,1-1,1H3c-0.6,0-1-0.4-1-1V3h17V1H2C0.9,1,0,1.9,0,3v17  c0,1.7,1.3,3,3,3h18c1.7,0,3-1.3,3-3V7C24,5.9,23.1,5,22,5z M14,12l2.4,1.8l1.2-1.6l-4-3L12,10v5c-1.1,0-2,0.9-2,2c0,1.1,0.9,2,2,2  s2-0.9,2-2c0,0,0,0,0,0h0V12z"/>
                                    </svg>',

    );

    public static function getIconSvg($type)
    {
        if (!$type) {
            return '';
        }
        if (isset(self::$listIconSvg[$type])) {
            return '<figure class="fg_' . $type . '">' . self::$listIconSvg[$type] . '</figure>';
        }
        return '';
    }

    public function action()
    {
        global $g, $p;

        $cmd = get_param('cmd');
        if ($cmd == 'update') {
            $order = get_param('order');
            $status = get_param('status');
            if (self::$module == 'member_header_menu') {
                $status['menu_sign_out_edge'] = 1;
            }

            if (self::$module != 'member_home_page') {
                $listItems = array();
                foreach ($order as $key => $item) {
                    if (isset($status[$item])) {
                        $stat = 1;
                    } else {
                        $stat = 0;
                    }
                    $listItems[$item] = $stat;
                }
                if (Common::getOption(self::$module, self::$tmpl)) {
                    Config::update(self::$tmpl, self::$module, json_encode($listItems), true);
                } else {
                    Config::add(self::$tmpl, self::$module, json_encode($listItems), 'max', 0, '', true);
                }
            }

            if (self::$module == 'member_home_page') {
                $option = 'set_home_page';
                $setHomePage = get_param($option);
                Config::update(self::$tmpl, $option, $setHomePage, true);
            } elseif (self::$module == 'member_profile_tabs' || self::$module == 'member_groups_tabs') {
                $option = 'set_default_profile_tab';
                if (self::$module == 'member_groups_tabs') {
                    $option = 'set_default_groups_tab';
                }
                $setDefaultTab = get_param($option);
                Config::update(self::$tmpl, $option, $setDefaultTab, true);
            }

            redirect($p . '?action=saved' . self::$urlParams);
        }
    }

    public static function setParam($params = array())
    {
        foreach ($params as $key => $value) {
            self::$$key = $value;
        }
    }

    public static function getOrderItemsList($module, $onlyActive = true, $tmpl = null, $admin = false)
    {
        global $sitePart;
        global $p;

        $itemsList = array();
        if ($tmpl === null) {
            $tmpl = Common::getOption('name', 'template_options');
        }

        $uid = User::getParamUid();
        $uidParam = User::getParamUid(0);
        $groupId = Groups::getParamId();
        $isGroupPage = Groups::isPage();
        $groupsPhotoList = Groups::getParamTypeContentList();
        $isEHPPage = TemplateEdge::isEHP();

        $guid = guid();
        if ($tmpl == 'edge') {
            $lPrfKey = '';
            $menuGroupsSubscribersInner = array();
            $menuGroupsSubscribers = array();
            $menuGroupLike = array();

            $isHideSubscribeMenuItem = false;
            if ($groupId) {
                $isHideSubscribeMenuItem = !$admin && $guid == $uid && !$isGroupPage;
                $isSubscribeUser = Groups::isSubscribeUser($guid, $groupId);

                if ($isGroupPage) {
                    $lPrfKey = '_page';

                    $menuGroupsSubscribersInner = array(
                        'url' => 'group_page_liked',
                        'icon' => 'fa-hand-o-right',
                        'url_page' => 'groups_social_subscribers.php',
                        'url_real' => Common::pageUrl('group_page_liked', $groupId),
                        'title' => l('menu_inner_subscribers_page_edge'),
                        'tooltip' => l('tooltip_browse_subscribers_page'),
                        'tooltip_empty' => l('tooltip_browse_subscribers_page'),
                    );

                    $menuGroupLike = array(
                        'url' => '',
                        'icon' => 'fa-thumbs-o-up',
                        'tooltip' => l('menu_groups_like_edge'),
                        'title' => l('menu_groups_like_edge'),
                        'cmd' => 'request',
                    );

                    if ($isSubscribeUser) {
                        $menuGroupLike = array(
                            'url' => '',
                            'icon' => 'fa-thumbs-up',
                            'tooltip' => l('menu_groups_liked_edge'),
                            'title' => l('menu_groups_liked_edge'),
                            'cmd' => 'remove',
                        );
                    }
                } else {
                    $lPrfKey = '_group';

                    $menuGroupsSubscribersInner = array(
                        'url' => 'group_subscribers',
                        'icon' => 'fa-hand-o-right',
                        'url_page' => 'groups_social_subscribers.php',
                        'url_real' => Common::pageUrl('group_subscribers', $groupId),
                        'title' => l('menu_inner_subscribers_group_edge'),
                        'tooltip' => l('tooltip_browse_subscribers_group'),
                        'tooltip_empty' => l('tooltip_browse_subscribers_group'),
                    );

                    if ($isSubscribeUser) {
                        $menuGroupLike = array(
                            'url' => '',
                            'icon' => 'fa-user-times',
                            'tooltip' => l('menu_groups_unjoin_edge'),
                            'title' => l('menu_groups_unjoin_edge'),
                            'cmd' => 'remove',
                        );
                    } else {
                        $subscribeRequestInfo = Groups::getSubscribeRequestInfo($guid, $groupId);
                        if ($subscribeRequestInfo && !$subscribeRequestInfo['accepted']) {
                            $menuGroupLike = array(
                                'url' => '',
                                'icon' => 'fa-user-times',
                                'tooltip' => l('remove_request'),
                                'title' => l('remove_request'),
                                'cmd' => 'remove_request',
                            );
                        } else {
                            $menuGroupLike = array(
                                'url' => '',
                                'icon' => 'fa-user-plus',
                                'tooltip' => l('menu_groups_join_edge'),
                                'title' => l('menu_groups_join_edge'),
                                'cmd' => 'request',
                            );
                        }
                    }
                }

                $menuGroupsSubscribers = $menuGroupsSubscribersInner;
                $menuGroupsSubscribers['title'] = $isGroupPage ? l('menu_subscribers_page_edge') : l('menu_subscribers_group_edge');
            }

            if ($module == 'main_page_block_order') {
                $itemsList = array(
                    'our_app' => 1,
                    'register_now' => 1,
                    'log_in' => 1,
                    'list_blog_posts' => 1,
                    'list_people' => 1,
                    'list_videos' => 1,
                    'list_live' => 1,
                    'list_songs' => 1,
                    'list_photos' => 1,
                    'list_pages' => 1,
                    'list_groups' => 1,
                    'info_block' => 1,
                );

                if (Common::isApp()) {
                    unset($itemsList['our_app']);
                }

                if (LiveStreaming::notAviableLiveStreamingAdmin()) {
                    unset($itemsList['list_live']);
                }

            } elseif ($module == 'member_column_left_order' || $module == 'member_groups_column_left_order') {
                $itemsList = array(
                    'photos' => 1,
                    'videos' => 1,
                    'pages' => 1,
                    'groups' => 1,
                    'blogs' => 1,
                    'songs' => 1,
                    'custom_menu' => 1,
                    'banner' => 1,
                );
                if (!$admin) {
                    if ($module == 'member_groups_column_left_order') {
                        unset($itemsList['pages']);
                        unset($itemsList['groups']);
                        unset($itemsList['blogs']);
                    } elseif ($p == 'photos_list.php' || $p == 'vids_list.php'
                        || $p == 'songs_list.php') {
                        if ($groupsPhotoList) {
                            if ($p == 'photos_list.php') {
                                unset($itemsList['videos']);
                                unset($itemsList['songs']);
                            } elseif ($p == 'songs_list.php') {
                                unset($itemsList['photos']);
                                unset($itemsList['songs']);
                            } else {
                                unset($itemsList['photos']);
                                unset($itemsList['songs']);
                            }
                            if ($groupsPhotoList == 'group_page') {
                                unset($itemsList['groups']);
                            } else {
                                unset($itemsList['pages']);
                            }
                        }
                    }
                }
            } elseif ($module == 'member_column_right_order') {
                $itemsList = array(
                    'friends_online' => 1,
                    'friends' => 1,
                    'blogs_list_last' => 1,
                    'send_message' => 1,
                    'friend_add' => 1,
                    'page_add' => 1,
                    'group_add' => 1,
                    'blog_add' => 1,
                    'profile_verification' => 1,
                    'user_menu' => 1,
                    'profile_info' => 1,
                    'custom_menu' => 1,
                    'videos_list_1' => 1,
                    'videos_list_2' => 1,
                    'photos_list_1' => 1,
                    'photos_list_2' => 1,
                    'songs_list_1' => 1,
                    'songs_list_2' => 1,
                    'blogs_list_1' => 1,
                    'blogs_list_2' => 1,
                    'banner' => 1,
                );

                if (!$admin) {
                    $isPageA = in_array($p, array('groups_list.php', 'group_add.php', 'blogs_list.php', 'blogs_add.php'));
                    if ($guid != $uidParam && !$isPageA) {
                        unset($itemsList['page_add']);
                        unset($itemsList['group_add']);
                        unset($itemsList['blog_add']);
                    } elseif ($isPageA) {
                        if (in_array($p, array('groups_list.php', 'group_add.php'))) {
                            if ($isGroupPage) {
                                unset($itemsList['group_add']);
                            } else {
                                unset($itemsList['page_add']);
                            }
                            unset($itemsList['blog_add']);
                        } else {
                            unset($itemsList['page_add']);
                            unset($itemsList['group_add']);
                        }
                        unset($itemsList['profile_verification']);
                    }

                    if ($uidParam != $guid || !User::isAllowProfileVerification()) {
                        unset($itemsList['profile_verification']);
                    }
                }
            } elseif ($module == 'member_groups_column_right_order') {
                $itemsList = array(
                    //'subscribers_group_online' => 1,
                    'subscribers_group' => 1,
                    'request_subscribe_group' => 1,
                    'profile_info' => 1,
                    'page_add' => 1,
                    'group_add' => 1,
                    'user_menu' => 1,
                    'custom_menu' => 1,
                    'banner' => 1,
                );

                if (!$admin) {
                    $isUnsetAdd = true;
                    if ($guid == $uid) {
                        if ($isGroupPage) {
                            unset($itemsList['group_add']);
                        } else {
                            unset($itemsList['page_add']);
                            //unset($itemsList['request_subscribe_group']);
                        }
                        $isUnsetAdd = false;
                    }
                    if ($isUnsetAdd) {
                        unset($itemsList['group_add']);
                        unset($itemsList['page_add']);
                    }
                }
            } elseif ($module == 'blogs_column_right_order') {
                $itemsList = array(
                    'profile_info' => 1,
                    'blog_add' => 1,
                    'user_menu' => 1,
                    'custom_menu' => 1,
                    'banner' => 1,
                );

                if (!$admin) {
                }
            } elseif ($module == 'member_header_menu' || $module == 'member_user_additional_menu') {
                $itemsList = array(
                    'menu_profile_edge' => array(
                        'url' => '',
                        'url_real' => User::url($guid),
                        'icon' => 'fa-user',
                        'icon_svg' => 'user',
                        'tooltip' => l('tooltip_profile'),
                    ),
                    'menu_timeline_edge' => array(
                        'url' => 'wall',
                        'icon' => 'fa-bars',
                        'icon_svg' => 'timeline',
                        'tooltip' => l('tooltip_timeline'),
                    ),
                    'menu_people_edge' => array(
                        'url' => 'search_results',
                        'icon' => 'fa-search',
                        'icon_svg' => 'search',
                        'tooltip' => l('tooltip_people'),
                    ),
                    'menu_blogs_edge' => array(
                        'url' => 'blogs_list',
                        'icon' => 'fa-file-text-o',
                        'icon_svg' => 'blogs',
                        'tooltip' => l('tooltip_browse_posts'),
                    ),
                    'menu_my_blogs_edge' => array('url' => 'user_my_blogs_list',
                        'url_real' => Common::pageUrl('user_blogs_list', $guid),
                        'icon' => 'fa-file-text',
                        'icon_svg' => 'blogs_my',
                        'tooltip' => l('tooltip_browse_my_posts'),
                    ),
                    'menu_blogs_add_edge' => array(
                        'url' => 'blogs_add',
                        'icon' => 'fa-pencil-square-o',
                        'icon_svg' => 'blogs_add',
                        'tooltip' => l('tooltip_blog_add'),
                    ),
                    'menu_videos_edge' => array(
                        'url' => 'vids_list',
                        'icon' => 'fa-film',
                        'icon_svg' => 'film',
                        'tooltip' => l('tooltip_browse_videos'),
                    ),
                    'menu_my_videos_edge' => array(
                        'url' => 'user_my_vids_list',
                        'url_real' => Common::pageUrl('user_vids_list', $guid),
                        'icon' => 'fa-file-video-o',
                        'icon_svg' => 'file_video',
                        'tooltip' => l('tooltip_browse_my_videos'),
                    ),
                    'menu_video_add_edge' => array(
                        'url' => '',
                        'icon' => 'fa-video-camera',
                        'icon_svg' => 'video_camera',
                        'tooltip' => l('tooltip_video_add'),
                    ),

                    'menu_songs_edge' => array(
                        'url' => 'songs_list',
                        'icon' => 'fa-music',
                        'icon_svg' => 'audio',
                        'tooltip' => l('tooltip_browse_songs'),
                    ),
                    'menu_my_songs_edge' => array(
                        'url' => 'user_my_songs_list',
                        'url_real' => Common::pageUrl('user_songs_list', $guid),
                        'icon' => 'fa-music',
                        'icon_svg' => 'audio_my',
                        'tooltip' => l('tooltip_browse_my_songs'),
                    ),
                    'menu_song_add_edge' => array(
                        'url' => '',
                        'icon' => 'fa-file-audio-o',
                        'icon_svg' => 'audio_add',
                        'tooltip' => l('tooltip_song_add'),
                    ),

                    'menu_photos_edge' => array(
                        'url' => 'photos_list',
                        'icon' => 'fa-picture-o',
                        'icon_svg' => 'picture',
                        'tooltip' => l('tooltip_browse_photos'),
                    ),
                    'menu_my_photos_edge' => array(
                        'url' => 'user_my_photos_list',
                        'url_real' => Common::pageUrl('user_photos_list', $guid),
                        'icon' => 'fa-file-image-o',
                        'icon_svg' => 'file_picture',
                        'tooltip' => l('tooltip_browse_my_photos'),
                    ),
                    'menu_photo_add_edge' => array(
                        'url' => '',
                        'icon' => 'fa-camera',
                        'icon_svg' => 'camera',
                        'tooltip' => l('tooltip_photo_add'),
                    ),
                    'menu_3dcity_edge' => array(
                        'url' => 'city',
                        'icon' => 'fa-globe',
                        'icon_svg' => 'globe',
                        'tooltip' => l('tooltip_3dcity'),
                    ),
                    'menu_street_chat_edge' => array(
                        'url' => 'street_chat',
                        'icon' => 'fa-map-marker',
                        'icon_svg' => 'map_marker',
                        'tooltip' => l('tooltip_street_chat'),
                    ),
                    'menu_games_edge' => array(
                        'url' => 'games',
                        'icon' => 'fa-gamepad',
                        'icon_svg' => 'gamepad',
                        'tooltip' => l('tooltip_games'),
                    ),
                    'menu_invite_friends_by_sms_edge' => array(
                        'url' => '',
                        'icon' => 'fa-user-plus',
                        'icon_svg' => 'user_plus',
                        'tooltip' => l('menu_invite_friends_by_sms_edge'),
                    ),
                    'menu_friends_edge' => array(
                        'url' => 'user_friends_list',
                        'icon' => 'fa-users',
                        'icon_svg' => 'users',
                        'tooltip' => l('tooltip_browse_friends'),
                    ),
                    'menu_friends_online_edge' => array(
                        'url' => 'my_friends_online',
                        'icon' => 'fa-user-circle',
                        'icon_svg' => 'user_circle',
                        'tooltip' => l('tooltip_browse_friends_online'),
                    ),
                    'menu_users_viewed_me_edge' => array(
                        'url' => 'users_viewed_me',
                        'icon' => 'fa-user-circle-o',
                        'icon_svg' => 'user_circle_o',
                        'tooltip' => l('tooltip_profile_visitors'),
                    ),
                    'menu_users_favorites_edge' => array(
                        'url' => 'favorite_list',
                        'icon' => 'fa-star',
                        'icon_svg' => 'star',
                        'tooltip' => l('tooltip_users_favorites'),
                    ),
                    'menu_settings_edge' => array(
                        'url' => 'profile_settings',
                        'icon' => 'fa-cog',
                        'icon_svg' => 'cog',
                        'tooltip' => l('tooltip_settings'),
                    ),
                    'menu_moderator_edge' => array(
                        'url' => 'moderator',
                        'icon' => 'fa-graduation-cap',
                        'icon_svg' => 'graduation_cap',
                        'tooltip' => l('tooltip_moderator'),
                    ),
                    'menu_users_blocked_edge' => array(
                        'url' => 'user_block_list',
                        'icon' => 'fa-times-circle',
                        'icon_svg' => 'times_circle',
                        'tooltip' => l('tooltip_users_blocked'),
                    ),

                    'menu_groups_edge' => array(
                        'url' => 'groups_list',
                        'icon' => 'fa-users',
                        'icon_svg' => 'groups',
                        'tooltip' => l('tooltip_browse_groups'),
                    ),
                    'menu_groups_photos_edge' => array(
                        'url' => 'groups_photos_list',
                        'icon' => 'fa-picture-o',
                        'icon_svg' => 'picture',
                        'tooltip' => l('tooltip_browse_photos_groups'),
                    ),
                    'menu_my_groups_photos_edge' => array(
                        'url' => 'user_my_groups_photos_list',
                        'url_real' => Common::pageUrl('user_my_groups_photos_list', $guid),
                        'icon' => 'fa-file-image-o',
                        'icon_svg' => 'file_picture',
                        'tooltip' => l('tooltip_browse_my_groups_photos'),
                    ),
                    'menu_groups_videos_edge' => array(
                        'url' => 'groups_vids_list',
                        'icon' => 'fa-film',
                        'icon_svg' => 'film',
                        'tooltip' => l('tooltip_browse_videos_groups'),
                    ),
                    'menu_my_groups_videos_edge' => array(
                        'url' => 'user_my_groups_vids_list',
                        'url_real' => Common::pageUrl('user_my_groups_vids_list', $guid),
                        'icon' => 'fa-file-video-o',
                        'icon_svg' => 'file_video',
                        'tooltip' => l('tooltip_browse_my_groups_videos'),
                    ),

                    'menu_groups_songs_edge' => array(
                        'url' => 'groups_songs_list',
                        'icon' => 'fa-music',
                        'icon_svg' => 'audio_group',
                        'tooltip' => l('tooltip_browse_songs_groups'),
                    ),
                    'menu_my_groups_songs_edge' => array(
                        'url' => 'user_my_groups_songs_list',
                        'url_real' => Common::pageUrl('user_my_groups_songs_list', $guid),
                        'icon' => 'fa-music',
                        'icon_svg' => 'audio_my_group',
                        'tooltip' => l('tooltip_browse_my_groups_songs'),
                    ),
                    'menu_pages_songs_edge' => array(
                        'url' => 'pages_songs_list',
                        'icon' => 'fa-music',
                        'icon_svg' => 'audio_page',
                        'tooltip' => l('tooltip_browse_songs_pages'),
                    ),
                    'menu_my_pages_songs_edge' => array(
                        'url' => 'user_my_pages_songs_list',
                        'url_real' => Common::pageUrl('user_my_pages_songs_list', $guid),
                        'icon' => 'fa-music',
                        'icon_svg' => 'audio_my_page',
                        'tooltip' => l('tooltip_browse_my_pages_songs'),
                    ),

                    'menu_my_groups_edge' => array(
                        'url' => 'user_my_groups_list',
                        'url_real' => Common::pageUrl('user_groups_list', $guid),
                        'icon' => 'fa-users',
                        'icon_svg' => 'groups_my',
                        'tooltip' => l('tooltip_browse_my_groups'),
                    ),

                    'menu_group_create_edge' => array(
                        'url' => 'group_add',
                        'icon' => 'fa-plus-square',
                        'icon_svg' => 'group_create',
                        'tooltip' => l('tooltip_blog_add'),
                    ),
                    'menu_pages_edge' => array(
                        'url' => 'pages_list',
                        'icon' => 'fa-file-text',
                        'icon_svg' => 'file_text',
                        'tooltip' => l('tooltip_browse_pages'),
                    ),
                    'menu_pages_photos_edge' => array(
                        'url' => 'pages_photos_list',
                        'icon' => 'fa-picture-o',
                        'icon_svg' => 'picture',
                        'tooltip' => l('tooltip_browse_photos_pages'),
                    ),
                    'menu_my_pages_photos_edge' => array(
                        'url' => 'user_my_pages_photos_list',
                        'url_real' => Common::pageUrl('user_my_pages_photos_list', $guid),
                        'icon' => 'fa-file-image-o',
                        'icon_svg' => 'file_picture',
                        'tooltip' => l('tooltip_browse_my_pages_photos'),
                    ),
                    'menu_pages_videos_edge' => array(
                        'url' => 'pages_vids_list',
                        'icon' => 'fa-film',
                        'icon_svg' => 'film',
                        'tooltip' => l('tooltip_browse_videos_pages'),
                    ),
                    'menu_my_pages_videos_edge' => array(
                        'url' => 'user_my_pages_vids_list',
                        'url_real' => Common::pageUrl('user_my_pages_vids_list', $guid),
                        'icon' => 'fa-file-video-o',
                        'icon_svg' => 'file_video',
                        'tooltip' => l('tooltip_browse_my_pages_videos'),
                    ),
                    'menu_my_pages_edge' => array(
                        'url' => 'user_my_pages_list',
                        'url_real' => Common::pageUrl('user_pages_list', $guid),
                        'icon' => 'fa-file-text-o',
                        'icon_svg' => 'file_text_o',
                        'tooltip' => l('tooltip_browse_my_pages'),
                    ),
                    'menu_page_create_edge' => array(
                        'url' => 'page_add',
                        'icon' => 'fa-plus-square',
                        'icon_svg' => 'plus_square',
                        'tooltip' => l('tooltip_create_page'),
                    ),
                    'menu_my_calendar_edge' => array(
                        'url' => 'user_my_calendar',
                        'url_real' => Common::pageUrl('user_calendar', $guid),
                        'icon' => 'fa-calendar',
                        'icon_svg' => 'calendar',
                        'tooltip' => l('tooltip_my_calendar'),
                    ),
                    'menu_create_task_edge' => array(
                        'url' => 'task_my_create',
                        'url_real' => Common::pageUrl('task_create', $guid),
                        'icon' => 'fa-calendar-plus-o',
                        'icon_svg' => 'calendar_plus',
                        'tooltip' => l('tooltip_create_task_edge'),
                    ),
                    'menu_upgrade_edge' => array(
                        'url' => 'upgrade',
                        'icon' => 'fa-diamond',
                        'icon_svg' => 'diamond',
                        'tooltip' => l('tooltip_upgrade'),
                    ),

                    'menu_fb_invite_edge' => array(
                        'url' => '',
                        'icon' => 'fa-facebook',
                        'icon_svg' => 'facebook',
                        'tooltip' => l('tooltip_fb_invite'),
                    ),
                    'menu_profile_verification_edge' => array(
                        'url' => '',
                        'icon' => 'fa-check-circle-o',
                        'icon_svg' => 'check_circle',
                        'tooltip' => l('tooltip_profile_verification'),
                    ),
                    'menu_sign_out_edge' => array(
                        'url' => '',
                        'icon' => 'fa-sign-out',
                        'icon_svg' => 'sign_out',
                        'tooltip' => l('tooltip_sign_out'),
                    ),
                    'menu_refill_credits_edge' => array(
                        'url' => '',
                        'icon' => 'fa-credit-card-alt',
                        'icon_svg' => '',
                        'tooltip' => l('tooltip_refill_credits'),
                    ),
                    'menu_my_live_streaming_edge' => array(
                        'url' => 'my_live',
                        'url_real' => Common::pageUrl('live', $guid),
                        'icon' => 'fa-television',
                        'icon_svg' => 'live_streaming',
                        'tooltip' => l('tooltip_my_live_streaming_edge'),
                    ),

                    'menu_live_list_edge' => array('status' => 1,
                        'url' => 'live_list',
                        'icon' => 'fa-television',
                        'icon_svg' => 'television',
                        'tooltip' => l('tooltip_live_list_edge'),
                    ),
                    'menu_live_list_finished_edge' => array(
                        'url' => 'live_list_finished',
                        'icon' => 'fa-television',
                        'icon_svg' => 'television_finished',
                        'tooltip' => l('tooltip_live_list_finished_edge'),
                    ),

                );

                if (((Common::getAppIosApiVersion() < 48) || ($module == 'member_user_additional_menu' || (!Common::isAppIos() && $sitePart != 'administration'))) && isset($itemsList['menu_invite_friends_by_sms_edge'])) {
                    unset($itemsList['menu_invite_friends_by_sms_edge']);
                }

                if (Common::isApp() || Common::isMobile(false, true, true)) {
                    unset($itemsList['menu_fb_invite_edge']);
                }

                if (LiveStreaming::notAviableLiveStreamingAdmin()) {
                    unset($itemsList['menu_my_live_streaming_edge']);
                    unset($itemsList['menu_live_list_edge']);
                }

                if (!Common::isOptionActive('credits_enabled') || Common::isOptionActive('free_site')) {
                    unset($itemsList['menu_refill_credits_edge']);
                }

                if (IS_DEMO) {
                    $edgeSetHomePage = Common::paramFromSession('edge_set_home_page');
                    if ($edgeSetHomePage != '' && $edgeSetHomePage != 'off') {
                        if (isset($itemsList[$edgeSetHomePage])) {
                            $itemsList = array_merge(array($edgeSetHomePage => $itemsList[$edgeSetHomePage]), $itemsList);
                        }
                    }

                    $edgeDisablePages = Common::paramFromSession('edge_disable_pages');
                    if ($edgeDisablePages != '' && $edgeDisablePages != 'off') {
                        $edgeDisablePagesList = explode(',', $edgeDisablePages);
                        foreach ($edgeDisablePagesList as $edgeDisablePage) {
                            if (isset($itemsList[$edgeDisablePage])) {
                                unset($itemsList[$edgeDisablePage]);
                            }
                        }
                    }
                }

                if ((Common::isOptionActive('free_site') || User::isSuperPowers()) && !$admin) {
                    unset($itemsList['menu_upgrade_edge']);
                }

                if (!$admin && !User::isAllowProfileVerification()) {
                    unset($itemsList['menu_profile_verification_edge']);
                }

                if ($module != 'member_user_additional_menu') {

                    if (!GroupsList::getTotalGroupsFromUser($guid, true)) {
                        unset($itemsList['menu_my_pages_edge']);
                    }

                    if (!GroupsList::getTotalGroupsFromUser($guid)) {
                        unset($itemsList['menu_my_groups_edge']);
                    }

                    if (!BlogsList::getTotalBlogsFromUser($guid)) {
                        unset($itemsList['menu_my_blogs_edge']);
                    }
                }

                if (!Common::isOptionActive('calendar_enabled', 'edge_events_settings')) {
                    unset($itemsList['menu_my_calendar_edge']);
                    unset($itemsList['menu_create_task_edge']);
                }

            } elseif ($module == 'member_groups_additional_menu') {
                $itemsList = array(
                    'menu_messages_edge' => array(
                        'url' => '',
                        'icon' => 'fa-comments',
                        'tooltip' => l('tooltip_messages' . $lPrfKey),
                        'disabled_link' => true,
                    ),
                    'menu_timeline_edge' => array(
                        'url' => '',
                        'url_real' => Groups::url($groupId, null, null, true, true),
                        'icon' => 'fa-bars',
                        'tooltip' => l('tooltip_timeline' . $lPrfKey),
                    ),
                    'menu_my_videos_edge' => array(
                        'url' => 'group_vids_list',
                        'url_page' => 'vids_list.php',
                        'url_real' => Common::pageUrl('group_vids_list', $groupId),
                        'icon' => 'fa-file-video-o',
                        'tooltip' => l('tooltip_browse_videos' . $lPrfKey),
                    ),
                    'menu_video_add_edge' => array(
                        'url' => '',
                        'icon' => 'fa-video-camera',
                        'tooltip' => l('tooltip_video_add'),
                    ),
                    'menu_my_photos_edge' => array(
                        'url' => 'group_photos_list',
                        'url_page' => 'photos_list.php',
                        'url_real' => Common::pageUrl('group_photos_list', $groupId),
                        'icon' => 'fa-file-image-o',
                        'tooltip' => l('tooltip_browse_photos' . $lPrfKey),
                    ),
                    'menu_photo_add_edge' => array(
                        'url' => '',
                        'icon' => 'fa-camera',
                        'tooltip' => l('tooltip_photo_add'),
                    ),
                    'menu_my_songs_edge' => array(
                        'url' => 'group_songs_list',
                        'url_page' => 'songs_list.php',
                        'url_real' => Common::pageUrl('group_songs_list', $groupId),
                        'icon' => 'fa-music',
                        'tooltip' => l('tooltip_browse_songs' . $lPrfKey),
                    ),
                    'menu_song_add_edge' => array(
                        'url' => '',
                        'icon' => 'fa-file-audio-o',
                        'tooltip' => l('tooltip_song_add'),
                    ),
                    'menu_users_blocked_edge' => array(
                        'url' => Common::pageUrl('group_block_list', $groupId),
                        'icon' => 'fa-times-circle',
                        'tooltip' => l('tooltip_users_blocked'),
                    ),
                    'menu_group_mail_edge' => array(
                        'url' => Common::pageUrl('group_mail', $groupId),
                        'icon' => 'fa-file-video-o',
                        'tooltip' => l('tooltip_group_mail'),
                    ),
                    'menu_group_invite_edge' => array(
                        'url' => Common::pageUrl('group_invite', $groupId),
                        'icon' => 'fa-file-video-o',
                        'tooltip' => l('tooltip_group_invite'),
                    ),
                    'menu_group_edit_edge' => array(
                        'url' => Common::pageUrl('group_edit', $groupId),
                        'icon' => 'fa fa-edit',
                        'tooltip' => l('tooltip_group_invite'),
                    ),
                    'menu_groups_like_edge' => $menuGroupLike,
                    'menu_groups_subscribers_edge' => $menuGroupsSubscribers,
                );

                if ($isHideSubscribeMenuItem) {
                    unset($itemsList['menu_groups_like_edge']);
                }

            } elseif ($module == 'member_ehp_additional_menu') {
                $ehp_id = TemplateEdge::getEHPId();
                $ehp_type = TemplateEdge::getEHPType();
                $lPrfKey = '';
                if ($ehp_type == 'event') {
                    $ehp_photo_page = 'event_photo';
                    $ehp_wall_page = 'event_wall';
                    $ehp_mail_page = 'event_mail_page';
                    $ehp_edit_page = 'event_edit_page';
                } elseif ($ehp_type == 'hotdate') {
                    $ehp_photo_page = 'hotdate_photo';
                    $ehp_wall_page = 'hotdate_wall';
                    $ehp_mail_page = 'hotdate_mail_page';
                    $ehp_edit_page = 'hotdate_edit_page';
                } elseif ($ehp_type == 'partyhou') {
                    $ehp_photo_page = 'partyhou_photo';
                    $ehp_wall_page = 'partyhou_wall';
                    $ehp_mail_page = 'partyhou_mail_page';
                    $ehp_edit_page = 'partyhou_edit_page';
                }

                $itemsList = array(
                    'menu_messages_edge' => array(
                        'url' => '',
                        'icon' => 'fa-comments',
                        'tooltip' => l('tooltip_messages' . $lPrfKey),
                        'disabled_link' => true,
                    ),
                    'menu_timeline_edge' => array(
                        'url' => '',
                        'url_real' => Common::pageUrl($ehp_wall_page, $ehp_id),
                        'icon' => 'fa-bars',
                        'tooltip' => l('tooltip_timeline' . $lPrfKey),
                    ),
                    'menu_my_photos_edge' => array(
                        'url' => 'group_photos_list',
                        'url_page' => 'photos_list.php',
                        'url_real' => Common::pageUrl($ehp_photo_page, $ehp_id),
                        'icon' => 'fa-file-image-o',
                        'tooltip' => l('tooltip_browse_photos' . $lPrfKey),
                    ),
                    'menu_photo_add_edge' => array(
                        'url' => '',
                        'icon' => 'fa-camera',
                        'tooltip' => l('tooltip_photo_add'),
                    ),
                    'menu_ehp_mail_edge' => array(
                        'url' => Common::pageUrl($ehp_mail_page, $ehp_id),
                        'icon' => 'fa-envelope',
                        'tooltip' => l('tooltip_event_mail'),
                    ),
                    'menu_ehp_edit_edge' => array(
                        'url' => Common::pageUrl($ehp_edit_page, $ehp_id),
                        'icon' => 'fa fa-edit',
                        'tooltip' => l('tooltip_event_edit'),
                    ),
                );
            } elseif ($module == 'member_header_menu_short') {
                $itemsList = array(
                    'new_tasks' => 1,
                    'friends_pending' => 1,
                    'new_message' => 1,
                    'new_events' => 1,
                );

            } elseif ($module == 'member_groups_header_menu_short') {
                $itemsList = array(
                    'new_tasks' => 1,
                    'subscribers_pending' => 1,
                    'new_message' => 1,
                    'new_events' => 1,
                );

                if (!$admin && $groupId) {
                    $groupInfo = Groups::getInfoBasic($groupId);
                    if ($groupInfo) {
                        if ($groupInfo['private'] == 'N' || ($groupInfo['private'] == 'Y' && $groupInfo['user_id'] != $guid)) {
                            unset($itemsList['subscribers_pending']);
                        }
                    } else {
                        unset($itemsList['subscribers_pending']);
                    }
                }
            } elseif ($module == 'member_profile_tabs' || $module == 'member_profile_inner_tabs') {
                $itemsList = array(
                    'menu_inner_wall_posts_edge' => array('url' => '',
                        'url_real' => User::url($uid, null, null, true, true),
                        'tooltip' => l('tooltip_browse_posts')),
                    'menu_inner_videos_edge' => array('url' => 'user_vids_list',
                        'url_page' => 'vids_list.php',
                        'tooltip' => l('tooltip_browse_videos')),
                    'menu_inner_photos_edge' => array('url' => 'user_photos_list',
                        'url_page' => 'photos_list.php',
                        'tooltip' => l('tooltip_browse_photos')),
                    'menu_inner_friends_edge' => array('url' => 'user_friends_list',
                        'url_page' => 'friends_list.php',
                        'url_empty' => 'search_results',
                        'tooltip' => l('tooltip_browse_friends'),
                        'tooltip_empty' => l('tooltip_browse_friends')),
                    'menu_inner_pages_edge' => array('url' => 'user_pages_list',
                        'url_page' => 'groups_list.php',
                        'tooltip' => l('tooltip_browse_pages')),
                    'menu_inner_groups_edge' => array('url' => 'user_groups_list',
                        'url_page' => 'groups_list.php',
                        'tooltip' => l('tooltip_browse_groups')),
                    'menu_inner_blogs_edge' => array('url' => 'user_blogs_list',
                        'url_page' => 'blogs_list.php',
                        'tooltip' => l('tooltip_browse_blogs')),
                    'menu_inner_songs_edge' => array('url' => 'user_songs_list',
                        'url_page' => 'songs_list.php',
                        'tooltip' => l('tooltip_browse_songs')),
                );

            } elseif ($module == 'member_groups_tabs' || $module == 'member_groups_inner_tabs') {
                $itemsList = array(
                    'menu_inner_go_live_edge' => array('url' => '',
                        'url_real' => 'live_streaming.php?group_id=' . $groupId,
                        'tooltip' => l('tooltip_browse_posts')),
                    'menu_inner_wall_posts_edge' => array('url' => '',
                        'url_real' => Groups::url($groupId, null, null, true, true),
                        'tooltip' => l('tooltip_browse_posts')),
                    'menu_inner_videos_edge' => array('url' => 'group_vids_list',
                        'url_page' => 'vids_list.php',
                        'url_real' => Common::pageUrl('group_vids_list', $groupId),
                        'url' => 'group_vids_list',
                        'tooltip' => l('tooltip_browse_videos')),

                    'menu_inner_photos_edge' => array('url' => '',
                        'url_page' => 'photos_list.php',
                        'url_real' => Common::pageUrl('group_photos_list', $groupId),
                        'url' => 'group_photos_list',
                        'tooltip' => l('tooltip_browse_photos')),
                    'menu_inner_songs_edge' => array('url' => '',
                        'url_page' => 'songs_list.php',
                        'url_real' => Common::pageUrl('group_songs_list', $groupId),
                        'url' => 'group_songs_list',
                        'tooltip' => l('tooltip_browse_songs')),

                    'menu_inner_groups_subscribers_edge' => $menuGroupsSubscribersInner,
                    'menu_groups_like_1_edge' => $menuGroupLike,
                );
            } elseif ($module == 'member_ehp_tabs') {
                $ehp_id = TemplateEdge::getEHPId();
                $ehp_type = TemplateEdge::getEHPType();
                $lPrfKey = '';
                if ($ehp_type == 'event') {
                    $ehp_photo_page = 'event_photo';
                    $ehp_wall_page = 'event_wall';
                    $ehp_mail_page = 'event_mail_page';
                    $ehp_edit_page = 'event_edit_page';
                    $ehp_id_field = 'event_id';
                    $ehp_subscribers_page = 'events_guest_users';
                    $ehp_address_page = 'event_address';
                    $ehp_type = 'event';
                } elseif ($ehp_type == 'hotdate') {
                    $ehp_photo_page = 'hotdate_photo';
                    $ehp_wall_page = 'hotdate_wall';
                    $ehp_mail_page = 'hotdate_mail_page';
                    $ehp_edit_page = 'hotdate_edit_page';
                    $ehp_id_field = 'hotdate_id';
                    $ehp_subscribers_page = 'hotdates_guest_users';
                    $ehp_address_page = 'hotdate_address';
                    $ehp_type = 'hotdate';
                } elseif ($ehp_type == 'partyhou') {
                    $ehp_photo_page = 'partyhou_photo';
                    $ehp_wall_page = 'partyhou_wall';
                    $ehp_mail_page = 'partyhou_mail_page';
                    $ehp_edit_page = 'partyhou_edit_page';
                    $ehp_id_field = 'partyhou_id';
                    $ehp_subscribers_page = 'partyhouz_guest_users';
                    $ehp_address_page = 'partyhou_address';
                    $ehp_type = 'partyhou';
                    $partyhou  = CpartyhouzTools::retrieve_partyhou_by_id($ehp_id);
                    $is_open_partyhouz = $partyhou['is_open_partyhouz'];
                }

                // $isSubscribeUser = false;

                // $menuEhpSign = array(
                //     'url' => '',
                //     'icon' => 'fa-thumbs-o-up',
                //     'tooltip' => l('menu_signup_edge'),
                //     'title' => l('menu_signup_edge'),
                //     'cmd' => 'signup',
                // );

                // if ($isSubscribeUser) {
                //     $menuEhpSign = array(
                //         'url' => '',
                //         'icon' => 'fa-thumbs-up',
                //         'tooltip' => l('menu_signout_edge'),
                //         'title' => l('menu_signout_edge'),
                //         'cmd' => 'signout',
                //     );
                // }

                $menuEHPSubscribersInner = array(
                    'url' => 'ehp_subscribers',
                    'icon' => 'fa-hand-o-right',
                    'url_page' => 'groups_social_subscribers.php',
                    'url_real' => Common::pageUrl($ehp_subscribers_page, $ehp_id),
                    'title' => l('menu_inner_subscribers_ehp_edge'),
                    'tooltip' => l('tooltip_browse_subscribers_ehp'),
                    'tooltip_empty' => l('tooltip_browse_subscribers_ehp'),
                );

                $itemsList = array(
                    'menu_inner_go_live_edge' => array('url' => '',
                        'url_real' => 'live_streaming.php?' . $ehp_id_field . '=' . $ehp_id,
                        'tooltip' => l('tooltip_browse_go_live')),

                    'menu_inner_description_edge' => array('url' => '',
                        'url_real' => 'live_streaming.php?' . $ehp_id_field . '=' . $ehp_id,
                        'tooltip' => l('description'),
                        'ehp_type'=> $ehp_type,
                        'ehp_id' => $ehp_id
                    ),

                    'menu_inner_wall_posts_edge' => array('url' => '',
                        'url_real' => Common::pageUrl($ehp_wall_page, $ehp_id),
                        'tooltip' => l('tooltip_browse_posts')),

                    'menu_inner_photos_edge' => array('url' => '',
                        'url_page' => 'photos_list.php',
                        'url_real' => Common::pageUrl($ehp_photo_page, $ehp_id),
                        'url' => 'group_photos_list',
                        'tooltip' => l('tooltip_browse_photos')),
                    'menu_inner_subscribers_edge' => $menuEHPSubscribersInner,

                    'menu_inner_address_edge' => array('url' => '',
                        'url_real' => Common::getAddressPageUrl($ehp_address_page, $ehp_id),
                        'tooltip' => l('tooltip_browse_address')),

                    'menu_inner_partyhou_join_edge' => array(
                        'url' => '',
                        'url_real' => Common::getPartyhouJoinPageUrl($ehp_id),
                        'tooltip' => l('tooltip_browse_partyhou_join')
                    ),
                );

                if (isset($is_open_partyhouz)) {
                    unset($itemsList['menu_inner_address_edge']);
                } else {
                    unset($itemsList['menu_inner_partyhou_join_edge']);
                }
            } elseif ($module == 'member_visited_additional_menu'
                || $module == 'member_visited_additional_menu_inner'
                || $module == 'member_visited_right_column_menu') {
                $itemsList = array(
                    'menu_messages_edge' => array(
                        'url' => '',
                        'icon' => 'fa-comments',
                        'icon_svg' => 'comments',
                        'tooltip' => l('tooltip_messages'),
                        'disabled_link' => true,
                    ),
                    'menu_friends_add_edge' => array( //NO
                        'url' => '',
                        'icon' => 'fa-user-plus',
                        //'icon_svg' => 'user_plus',
                        'tooltip' => '',
                    ),
                    'menu_videochat_edge' => array(
                        'url' => '',
                        'icon' => 'fa-video-camera',
                        'icon_svg' => 'video_camera',
                        'tooltip' => l('tooltip_videochat'),
                    ),
                    'menu_audiochat_edge' => array(
                        'url' => '',
                        'icon' => 'fa-phone',
                        'icon_svg' => 'phone',
                        'tooltip' => l('tooltip_audiochat'),
                    ),
                    'menu_audio_greeting_edge' => array( //NO
                        'url' => '',
                        'icon' => 'fa-microphone',
                        'tooltip' => l('tooltip_audio_greeting'),
                        'cmd' => AudioGreeting::getUrl($uid),
                    ),
                    'menu_favorite_add_edge' => array(
                        'url' => '',
                        'icon' => 'fa-star',
                        'icon_svg' => 'star',
                        'tooltip' => l('tooltip_add_favorite'),
                    ),
                    'menu_timeline_edge' => array(
                        'url' => '',
                        'url_real' => User::url($uid, null, null, true, true),
                        'icon' => 'fa-bars',
                        'icon_svg' => 'timeline',
                        'tooltip' => l('tooltip_timeline'),
                    ),
                    'menu_street_chat_edge' => array(
                        'url' => '',
                        'icon' => 'fa-street-view',
                        'icon_svg' => 'street_view',
                        'tooltip' => l('tooltip_street_chat'),
                    ),
                    'menu_blogs_edge' => array(
                        'url' => 'user_blogs_list',
                        'url_real' => Common::pageUrl('user_blogs_list'),
                        'icon' => 'fa-file-text',
                        'icon_svg' => 'blogs_my',
                        'tooltip' => l('tooltip_browse_posts'),
                    ),
                    'menu_videos_edge' => array(
                        'url' => 'user_vids_list',
                        'icon' => 'fa-file-video-o',
                        'icon_svg' => 'file_video',
                        'tooltip' => l('tooltip_browse_videos'),
                    ),
                    'menu_photos_edge' => array(
                        'url' => 'user_photos_list',
                        'icon' => 'fa-file-image-o',
                        'icon_svg' => 'file_picture',
                        'tooltip' => l('tooltip_browse_photos'),
                    ),

                    'menu_songs_edge' => array('url' => 'user_songs_list',
                        'icon' => 'fa-music',
                        'icon_svg' => 'audio_my',
                        'tooltip' => l('tooltip_browse_songs'),
                    ),

                    'menu_friends_edge' => array(
                        'url' => 'user_friends_list',
                        'icon' => 'fa-users',
                        'icon_svg' => 'users',
                        'tooltip' => l('tooltip_browse_friends'),
                    ),
                    'menu_pages_edge' => array(
                        'url' => 'user_pages_list',
                        'url_real' => Common::pageUrl('user_pages_list'),
                        'icon' => 'fa-file-text',
                        'icon_svg' => 'file_text',
                        'tooltip' => l('tooltip_browse_pages'),
                    ),
                    'menu_groups_edge' => array(
                        'url' => 'user_groups_list',
                        'url_real' => Common::pageUrl('user_groups_list'),
                        'icon' => 'fa-file-text',
                        'icon_svg' => 'groups',
                        'tooltip' => l('tooltip_browse_groups'),
                    ),
                    'menu_user_calendar_edge' => array(
                        'url' => 'user_calendar',
                        'url_real' => Common::pageUrl('user_calendar', $uid),
                        'icon' => 'fa-calendar',
                        'icon_svg' => 'calendar',
                        'tooltip' => l('tooltip_user_calendar'),
                    ),
                    'menu_task_add_edge' => array(
                        'url' => 'task_create',
                        'url_real' => Common::pageUrl('task_create', $uid),
                        'icon' => 'fa-calendar-plus-o',
                        'icon_svg' => 'calendar_plus',
                        'tooltip' => l('tooltip_task_add_edge'),
                    ),
                    'menu_user_block_edge' => array(
                        'url' => '',
                        'icon' => 'fa-ban',
                        'icon_svg' => 'ban',
                        'tooltip' => l('menu_user_block_edge'),
                    ),
                    'menu_user_report_edge' => array(
                        'url' => '',
                        'icon' => 'fa-exclamation-triangle',
                        'icon_svg' => 'exclamation_triangle',
                        'tooltip' => l('tooltip_user_report'),
                    ),
                    'menu_live_streaming_edge' => array(
                        'title' => l('menu_live_streaming_edge'),
                        'url' => 'live',
                        'url_real' => Common::pageUrl('live', $uid), //Common::pageUrl('live_id', $friend['user_id'], $userLiveNowId);
                        'icon' => 'fa-television',
                        'icon_svg' => 'live_streaming',
                        'tooltip' => l('tooltip_live_streaming_edge'),
                    ),
                );

                if (LiveStreaming::notAviableLiveStreamingAdmin()) {
                    unset($itemsList['menu_live_streaming_edge']);
                } else {
                    if (!$admin) {
                        $userLiveNowId = LiveStreaming::getUserLiveNowId($uid);
                        $itemsList['menu_live_streaming_edge']['url_real'] = Common::pageUrl('live_id', $uid, $userLiveNowId);
                    }

                    if (!$admin && $guid != $uid && !$userLiveNowId) {
                        $itemsList['menu_live_streaming_edge']['title'] = l('menu_live_streaming_disabled_edge');
                        $itemsList['menu_live_streaming_edge']['tooltip'] = l('tooltip_live_streaming_disabled_edge');
                    }
                }

                if (!$admin && User::isReportUser($uid)) {
                    unset($itemsList['menu_user_report_edge']);
                }

                if (!AudioGreeting::isActive() || (!Common::isAdminSitePart() && !$itemsList['menu_audio_greeting_edge']['cmd'])) {
                    unset($itemsList['menu_audio_greeting_edge']);
                }

                if (!GroupsList::getTotalGroupsFromUser($uid, true)) {
                    unset($itemsList['menu_pages_edge']);
                }

                if (!GroupsList::getTotalGroupsFromUser($uid, false)) {
                    unset($itemsList['menu_groups_edge']);
                }

                if (!Common::isOptionActive('calendar_enabled', 'edge_events_settings')) {
                    unset($itemsList['menu_user_calendar_edge']);
                    unset($itemsList['menu_task_add_edge']);
                }

                if (!BlogsList::getTotalBlogsFromUser($uid)) {
                    unset($itemsList['menu_blogs_edge']);
                }
            } elseif ($module == 'member_groups_visited_additional_menu'
                || $module == 'member_groups_visited_additional_menu_inner'
                || $module == 'member_groups_visited_right_column_menu') {

                $groupInfo = Groups::getInfoBasic($groupId);
                $username = '';
                if ($groupInfo) {
                    $user_id = $groupInfo['user_id'];
                    $user = User::getInfoFull($user_id);
                    if ($user) {
                        $username = $user['name'];
                    }
                }

                $itemsList = array(
                    'menu_messages_edge' => array(
                        'url' => '',
                        'icon' => 'fa-comments',
                        'tooltip' => l('tooltip_messages' . $lPrfKey),
                        'disabled_link' => true,
                    ),
                    'menu_videochat_edge' => array(
                        'url' => '',
                        'icon' => 'fa-video-camera',
                        'tooltip' => l('tooltip_videochat'),
                    ),
                    'menu_audiochat_edge' => array(
                        'url' => '',
                        'icon' => 'fa-phone',
                        'tooltip' => l('tooltip_audiochat'),
                    ),
                    'menu_timeline_edge' => array(
                        'url' => '',
                        'url_real' => Groups::url($groupId, null, null, true, true),
                        'icon' => 'fa-bars',
                        'tooltip' => l('tooltip_timeline' . $lPrfKey),
                    ),
                    'menu_videos_edge' => array(
                        'url' => 'group_vids_list',
                        'url_page' => 'vids_list.php',
                        'url_real' => Common::pageUrl('group_vids_list', $groupId),
                        'icon' => 'fa-file-video-o',
                        'tooltip' => l('tooltip_browse_videos' . $lPrfKey),
                    ),
                    'menu_photos_edge' => array(
                        'url' => 'group_photos_list',
                        'url_page' => 'photos_list.php',
                        'url_real' => Common::pageUrl('group_photos_list', $groupId),
                        'icon' => 'fa-file-image-o',
                        'tooltip' => l('tooltip_browse_photos' . $lPrfKey),
                    ),
                    'menu_songs_edge' => array(
                        'url' => 'group_songs_list',
                        'url_page' => 'songs_list.php',
                        'url_real' => Common::pageUrl('group_songs_list', $groupId),
                        'icon' => 'fa-music',
                        'icon_svg' => $lPrfKey == '_page' ? 'audio_page' : 'audio_group',
                        'tooltip' => l('tooltip_browse_songs' . $lPrfKey),
                    ),
                    'menu_groups_like_edge' => $menuGroupLike,
                    'menu_groups_subscribers_edge' => $menuGroupsSubscribers,
                    'menu_user_report_edge' => array(
                        'url' => '',
                        'icon' => 'fa-exclamation-triangle',
                        'tooltip' => l('tooltip_report' . $lPrfKey),
                    ),
                    'menu_group_edit_edge' => array(
                        'url' => '',
                        'url_real' => Common::pageUrl($isGroupPage ? 'page_edit' : 'group_edit', $groupId),
                        'icon' => 'fa fa-edit',
                    ),
                    'menu_user_group_mail' => array(
                        'url' => Common::pageUrl('group_mail', $groupId),
                        'icon' => 'fa-exclamation-triangle',
                        'icon_svg' => 'exclamation_triangle',
                        'tooltip' => l('tooltip_user_group_mail'),
                    ),
                    'menu_user_group_invite' => array(
                        'url' => Common::pageUrl('group_invite', $groupId),
                        'icon' => 'fa-exclamation-triangle',
                        'icon_svg' => 'exclamation_triangle',
                        'tooltip' => l('tooltip_user_group_invite'),
                    ),
                    'menu_user_group_owner' => array(
                        'url' => Common::pageUrl('group_owner', $groupId),
                        'owner_name' => $username,
                        'icon' => 'fa-exclamation-triangle',
                        'icon_svg' => 'exclamation_triangle',
                        'tooltip' => l('tooltip_user_group_invite'),
                    ),
                );

                if (!$groupId || !Common::isOptionActive('group_moderator', 'edge_groups_settings')) {
                    unset($itemsList['menu_user_group_mail']);
                    unset($itemsList['menu_user_group_invite']);
                } else {
                    $groupId = Groups::getParamId();
                    $sql = "SELECT  * FROM groups_social_subscribers WHERE group_id = " . to_sql($groupId, 'Text') . "AND user_id = " . to_sql(guid(), 'Text');
                    $my_subscriber = DB::row($sql);
                    $moderator_options = json_decode($my_subscriber['moderator_options'], true);
                    if (!$moderator_options['group_mail']) {
                        unset($itemsList['menu_user_group_mail']);
                    }
                    if (!$moderator_options['group_invite']) {
                        unset($itemsList['menu_user_group_invite']);
                    }
                }
                $groupInfo = Groups::getInfoBasic($groupId);

                if (!$groupInfo['show_owner']) {
                    unset($itemsList['menu_user_group_owner']);
                }

                if (!$admin && $groupId && Groups::isReport($groupId)) {
                    unset($itemsList['menu_user_report_edge']);
                }
                if (!Common::isOptionActive('reports_approval')) {
                    unset($itemsList['menu_user_report_edge']);
                }

                if ($module == 'member_groups_visited_right_column_menu') {
                    $groupUid = Groups::getInfoBasic($groupId, 'user_id');
                    if (!$admin && $groupUid != $guid) {
                        unset($itemsList['menu_group_edit_edge']);
                    }
                    unset($itemsList['menu_messages_edge']);

                    if (!$admin && $guid == $uid) {
                        unset($itemsList['menu_videochat_edge']);
                        unset($itemsList['menu_audiochat_edge']);
                        unset($itemsList['menu_user_report_edge']);
                    }
                } else {
                    unset($itemsList['menu_group_edit_edge']);
                }

                if ($isHideSubscribeMenuItem) {
                    unset($itemsList['menu_groups_like_edge']);
                }

            } elseif ($module == 'member_ehp_visited_additional_menu') {

                $ehp_id = TemplateEdge::getEHPId();
                $ehp_type = TemplateEdge::getEHPType();
                $lPrfKey = '';
                if ($ehp_type == 'event') {
                    $ehp_photo_page = 'event_photo';
                    $ehp_wall_page = 'event_wall';
                    $ehp_mail_page = 'event_mail_page';
                    $ehp_edit_page = 'event_edit_page';
                } elseif ($ehp_type == 'hotdate') {
                    $ehp_photo_page = 'hotdate_photo';
                    $ehp_wall_page = 'hotdate_wall';
                    $ehp_mail_page = 'hotdate_mail_page';
                    $ehp_edit_page = 'hotdate_edit_page';
                } elseif ($ehp_type == 'partyhou') {
                    $ehp_photo_page = 'partyhou_photo';
                    $ehp_wall_page = 'partyhou_wall';
                    $ehp_mail_page = 'partyhou_mail_page';
                    $ehp_edit_page = 'partyhou_edit_page';
                }

                $itemsList = array(
                    'menu_messages_edge' => array(
                        'url' => '',
                        'icon' => 'fa-comments',
                        'tooltip' => l('tooltip_messages' . $lPrfKey),
                        'disabled_link' => true,
                    ),
                    'menu_timeline_edge' => array(
                        'url' => '',
                        'url_real' => Common::pageUrl($ehp_wall_page, $ehp_id),
                        'icon' => 'fa-bars',
                        'tooltip' => l('tooltip_timeline' . $lPrfKey),
                    ),
                    'menu_my_photos_edge' => array(
                        'url' => 'group_photos_list',
                        'url_page' => 'photos_list.php',
                        'url_real' => Common::pageUrl($ehp_photo_page, $ehp_id),
                        'icon' => 'fa-file-image-o',
                        'tooltip' => l('tooltip_browse_photos' . $lPrfKey),
                    ),
                    'menu_photo_add_edge' => array(
                        'url' => '',
                        'icon' => 'fa-camera',
                        'tooltip' => l('tooltip_photo_add'),
                    ),
                );

            } elseif ($module == 'blogs_visited_right_column_menu') {
                $blogId = Blogs::getParamId();
                $itemsList = array(
                    'menu_blog_edit_edge' => array(
                        'url' => '',
                        'url_real' => Common::pageUrl('blog_edit', $blogId),
                        'icon' => 'fa fa-edit',
                    ),
                );
                if (!$admin) {
                    if (!$blogId || Blogs::getInfo($blogId, 'user_id') != $guid) {
                        unset($itemsList['menu_blog_edit_edge']);
                    }
                }
            } elseif ($module == 'member_home_page') {
                $itemsList = array(
                    'menu_profile_edge' => array('url' => '',
                        'url_real' => User::url($guid)),
                    'menu_timeline_edge' => array('url' => 'wall'),
                    'menu_people_edge' => array('url' => 'search_results'),
                    //'menu_blogs_edge'     => array('url' => 'blogs_list'),
                    'menu_videos_edge' => array('url' => 'vids_list'),
                    'menu_photos_edge' => array('url' => 'photos_list'),
                );

                $availableMenuItems = json_decode(Common::getOption('member_header_menu', 'edge'), true);
                if (is_array($availableMenuItems) && $availableMenuItems) {

                    $removeItemsFromList = array(
                        'menu_video_add_edge',
                        'menu_photo_add_edge',
                        'menu_song_add_edge',
                        'menu_invite_friends_by_sms_edge',
                        'menu_upgrade_edge',
                        'menu_fb_invite_edge',
                        'menu_profile_verification_edge',
                        'menu_moderator_edge',
                        'menu_sign_out_edge',
                        'menu_refill_credits_edge',
                    );

                    foreach ($availableMenuItems as $availableMenuItem => $isActive) {
                        if (!$isActive || in_array($availableMenuItem, $removeItemsFromList)) {
                            unset($availableMenuItems[$availableMenuItem]);
                        }
                    }

                    if ($availableMenuItems) {
                        $itemsList = $availableMenuItems;
                    }
                }

            }
        }

        $guid = guid();

        if ($module == 'member_user_additional_menu') {
            $itemsListTemp = array(
                'menu_messages_edge' => array(
                    'url' => '',
                    'icon' => 'fa-comments',
                    'tooltip' => l('tooltip_messages'),
                    'disabled_link' => true,
                ),
            );

            unset($itemsList['menu_moderator_edge']);
            unset($itemsList['menu_profile_edge']);
            unset($itemsList['menu_sign_out_edge']);
            unset($itemsList['menu_refill_credits_edge']);

            $itemsList = array_merge($itemsListTemp, $itemsList);
        }

        if (!Common::isOptionActive('friends_enabled')) {
            unset($itemsList['friends']);
            unset($itemsList['friends_online']);
            unset($itemsList['menu_friends_edge']);
            unset($itemsList['friends_pending']);
            unset($itemsList['menu_inner_friends_edge']);
            unset($itemsList['menu_friends_add_edge']);
            unset($itemsList['friend_add']);
        }

        if (!Common::isOptionActive('favorite_add')) {
            unset($itemsList['menu_favorite_add_edge']);
            unset($itemsList['menu_users_favorites_edge']);
        }

        if (!Common::isOptionActive('contact_blocking')) {
            unset($itemsList['menu_user_block_edge']);
            unset($itemsList['menu_users_blocked_edge']);
        }

        if (!Common::isOptionActive('audiochat')) {
            unset($itemsList['menu_audiochat_edge']);
        }

        if (!Common::isOptionActive('videochat')) {
            unset($itemsList['menu_videochat_edge']);
        }

        if (!Common::isModuleCityActive()) {
            unset($itemsList['menu_3dcity_edge']);
            unset($itemsList['menu_games_edge']);
        }

        if (!City::isActiveStreetChat()) {
            unset($itemsList['menu_street_chat_edge']);
        }

        if ($module == 'member_header_menu') {
            if (!$admin && $guid && !Moderator::checkAccess(true)) {
                unset($itemsList['menu_moderator_edge']);
            }
        } elseif ($module == 'member_visited_right_column_menu') {
            unset($itemsList['menu_messages_edge']);
        }

        self::$itemsList = $itemsList;

        $orderItems = Common::getOption($module, $tmpl);
        if ($orderItems) {
            $orderItems = json_decode($orderItems, true);
            if (!is_array($orderItems)) {
                $orderItems = array();
            }
        } else {
            $orderItems = array();
        }
        $orderItemsList = array();
        foreach ($orderItems as $k => $v) {
            if (isset($itemsList[$k])) {
                $value = is_array($itemsList[$k]) ? $itemsList[$k] : array();
                $value['active'] = $v;
                $orderItemsList[$k] = $value;
                unset($itemsList[$k]);
            }
        }
        foreach ($itemsList as $k => $v) {
            $value = is_array($v) ? $v : array();
            $value['active'] = 1;
            $orderItemsList[$k] = $value;
        }
        if ($onlyActive) {
            foreach ($orderItemsList as $k => $v) {
                if (!$v['active']) {
                    unset($orderItemsList[$k]);
                }
            }
        }

        if (isset($orderItemsList['menu_user_block_edge'])) {
            $orderItemsList['menu_user_block_edge']['cmd'] = 'block_visitor_user';
            $isEntryBlocked = intval(User::isEntryBlocked($guid, $uid));
            if ($isEntryBlocked) {
                $value = array('menu_user_unblock_edge' => array(
                    'url' => '',
                    'icon' => 'fa-times-circle',
                    'tooltip' => l('menu_user_unblock_edge'),
                    'cmd' => 'user_unblock',
                    'active' => $orderItemsList['menu_user_block_edge']['active'],

                ),
                );
                $orderItemsList = array_splice_assoc($orderItemsList, 'menu_user_block_edge', $value);
            }
        }

        if (isset($orderItemsList['menu_favorite_add_edge'])) {
            if (User::isFavoriteExists($guid, $uid)) {
                $value = array('menu_favorite_remove_edge' => array(
                    'url' => '',
                    'icon' => 'fa-star active',
                    'tooltip' => l('tooltip_remove_favorite'),
                    'active' => $orderItemsList['menu_favorite_add_edge']['active'],
                ),
                );
                $orderItemsList = array_splice_assoc($orderItemsList, 'menu_favorite_add_edge', $value);
            }
        }

        if (isset($orderItemsList['menu_friends_add_edge'])) {
            $icon = 'fa-user-times';
            $title = l('unfriend');
            $cmd = 'remove';
            $uidReqiest = 0;
            if (!User::isFriend($uid, $guid)) {
                $title = l('add_to_friends');
                $icon = 'fa-user-plus';
                $cmd = 'request';
                $uidReqiest = User::isFriendRequestExists($uid, $guid);
                if ($uidReqiest) {
                    $icon = 'fa-user-times';
                    $title = l('approve_request');
                    $cmd = 'approve';
                    if ($uidReqiest == $guid) {
                        $icon = 'fa-user-times';
                        $title = l('remove_request');
                        $cmd = 'remove';
                    }
                }
            }

            $value = array('menu_friends_add_edge' => array(
                'url' => '',
                'icon' => $icon,
                'tooltip' => $title,
                'title' => $title,
                'cmd' => $cmd,
                'param' => $uidReqiest,
                'active' => $orderItemsList['menu_friends_add_edge']['active'],
            ),
            );
            $orderItemsList = array_splice_assoc($orderItemsList, 'menu_friends_add_edge', $value);
        }

        return $orderItemsList;
    }

    public static function getCountMenuItem($k)
    {
        $count = 0;
        $uid = User::getParamUid();
        $groupId = Groups::getParamId();
        $groupsTypeContent = Groups::getTypeContentList();
        Groups::setTypeContentList(false);

        $is_ehp = TemplateEdge::isEHP();
        $ehp_type = TemplateEdge::getEHPType();
        $ehp_id = TemplateEdge::getEHPId();

        if ($k == 'menu_inner_videos_edge') {
            $count = CProfileVideo::getTotalVideos($uid, $groupId);
        } elseif ($k == 'menu_inner_friends_edge') {
            $count = User::getNumberFriends($uid);
        } elseif ($k == 'menu_inner_photos_edge') {
            $count = CProfilePhoto::getTotalPhotos($uid, false, $groupId);
            if ($is_ehp) {
                if ($ehp_type == 'event') {
                    $count = CEventsTools::totalEventImages($ehp_id);
                } elseif ($ehp_type == 'hotdate') {
                    $count = ChotdatesTools::totalHotdateImages($ehp_id);
                } elseif ($ehp_type == 'partyhou') {
                    $count = CpartyhouzTools::totalPartyhouImages($ehp_id);
                }
            }

        } elseif ($k == 'menu_inner_wall_posts_edge') {
            $count = Wall::getCountItems($uid);
        } elseif ($k == 'menu_users_viewed_me_edge') {
            $count = 0;
            //$viewers = User::getNumberViewersMeProfiles();
            //$count = $viewers['count'];
        } elseif ($k == 'menu_friends_edge') {
            $count = 0;
            //$count = User::getNumberFriends();
        } elseif ($k == 'menu_friends_online_edge') {
            $count = 0;
            //$count = User::getNumberFriendsOnline();
        } elseif ($k == 'menu_inner_pages_edge') {
            $count = GroupsList::getTotalGroupsFromUser($uid, true);
        } elseif ($k == 'menu_inner_groups_edge') {
            $count = GroupsList::getTotalGroupsFromUser($uid);
        } elseif ($k == 'menu_inner_groups_subscribers_edge') {
            $count = Groups::getNumberSubscribers($groupId);
        } elseif ($k == 'menu_inner_subscribers_edge') {
            $count = Groups::getNumberSubscribers($groupId);

            if ($is_ehp) {
                if ($ehp_type == 'event') {
                    $count = CEventsTools::getTotalGuestsCount($ehp_id);
                } elseif ($ehp_type == 'hotdate') {
                    $count = ChotdatesTools::getTotalGuestsCount($ehp_id);
                } elseif ($ehp_type == 'partyhou') {
                    $count = CpartyhouzTools::getTotalGuestsCount($ehp_id);
                }
            }
        } elseif ($k == 'menu_inner_blogs_edge') {
            $count = BlogsList::getTotalBlogsFromUser($uid);
        } elseif ($k == 'menu_inner_songs_edge') {
            $count = Songs::getTotal($uid, $groupId);
        }

        Groups::setTypeContentList($groupsTypeContent);

        return $count;
    }

    public static function isMenuItemProfileTab($key)
    {
        $defaultProfileTab = Common::getOption('set_default_profile_tab', 'edge');
        return $key == $defaultProfileTab;
    }

    public static function parseMenuItem(&$html, $data, $block, $k, $prf = '', $checkCounter = false, $j = 0)
    {

        if (!is_array($data)) {
            return;
        }

        if ($prf) {
            $prf = '_' . $prf;
        }

        $groupId = Groups::getParamId();
        $isGroupPage = false;
        $lPrfKey = '';
        if ($groupId) {
            $isGroupPage = Groups::isPage();
            $lPrfKey = $isGroupPage ? '_page' : '_group';
        }

        $blockItem = "{$block}{$prf}_item";
        $blockItemCounter = "{$blockItem}_count";
        $blockItemActive = "{$blockItem}_active";
        $blockItemStatus = "{$blockItem}_status";

        $html->clean($blockItemCounter);

        $guid = guid();

        if (isset($data['count'])) {
            $count = $data['count'];
        } else {
            $count = self::getCountMenuItem($k);
        }

        $uid = User::getParamUid();

        if ($checkCounter && !$count && $uid != $guid && !self::isMenuItemProfileTab($k) && $k != 'menu_groups_like_1_edge' && $k != 'menu_inner_go_live_edge') {
            return false;
        }

        $keyClass = $k;
        if (isset($data['disabled_link']) && $data['disabled_link']) {
            $keyClass = $k . ' link_disabled_js';
        }

        $html->setvar("{$blockItem}_key", $keyClass);

        $groupInfo = Groups::getInfoBasic($groupId);
        if ($blockItem == 'mn_circle_left_item' && $k == 'menu_messages_edge' && guid() == $groupInfo['user_id']) {$html->setvar("{$blockItem}_key", 'menu_messages_edge_group');}

        $title = l($k);
        if ($k == 'menu_user_report_edge') {
            $title = l($k . $lPrfKey);
        }
        if (isset($data['title']) && $data['title']) {
            $title = $data['title'];
        }
        if ($k == 'menu_user_group_owner') {
            $vars = array(
                'username' => $data['owner_name'],
            );
            $title = lSetVars(l($k), $vars);
        }
        $html->setvar("{$blockItem}_title", $title);
        $url = '';
        if (isset($data['url_real']) && $data['url_real']) {
            $url = $data['url_real'];
        } elseif (isset($data['url']) && $data['url']) {
            if ($data['url'] == '#mn_circle_more_list' || $data['url'] == '#mn_circle_small_more_list') { // || in_array($k, array('menu_timeline_edge'))
                $url = $data['url'];
            } else {
                if ($block == 'member_header_menu' && $k == 'menu_friends_edge') {
                    $url = Common::pageUrl($data['url'], guid());
                } else {
                    $url = Common::pageUrl($data['url']);
                }
            }
        }
        $html->setvar("{$blockItem}_url", $url);

        $iconSvg = '';
        $isCleanBlIcon = true;

        $blockSvg = array(
            'member_header_menu',
            'mn_circle_right',
            'mn_circle_left',
            'mn_circle_more',
            'mn_circle_small',
            'mn_circle_small_more',
            'right_column_user_menu',

        );
        if (in_array($block, $blockSvg)
            && isset($data['icon_svg']) && self::getIconSvg($data['icon_svg'])) {
            $iconSvg = self::getIconSvg($data['icon_svg']);
        } elseif (isset($data['icon']) && $data['icon']) {
            $isCleanBlIcon = false;
            $html->setvar("{$blockItem}_icon", $data['icon']);
            $html->parse("{$blockItem}_icon", false);
        }

        $html->setvar("{$blockItem}_icon_svg", $iconSvg);
        if ($isCleanBlIcon) {
            $html->clean("{$blockItem}_icon");
        }

        $html->setvar($blockItemCounter, $count);
        if ($count) {
            $html->parse($blockItemCounter, false);
        }
        if ($block == 'profile_menu_inner_small') {
            $html->subcond($j == 0, "{$blockItem}_user_name", $blockItemCounter);
        }

        if (isset($data['status'])) {
            $html->parse($blockItemStatus, false);
        } else {
            $html->clean($blockItemStatus);
        }

        $isActive = Common::isPage(isset($data['url']) && $data['url']);
        if ($k == 'menu_inner_wall_posts_edge') {
            $isActive = Common::isPage('profile');
            if ($isActive) {
                $wallPost = true;
                if ($guid != $uid) {
                    // $wallPost = Wall::isOnlyPostFriends($uid);
                    // $wallPost = !User::isEntryBlocked($guid, $uid);
                    $wallPost = Wall::$isShowPostInput;
                }
                if ($wallPost) {
                    $html->parse("{$blockItem}_wall_show_post_input", false);
                }
            }
        } elseif ($block == 'member_header_menu') {
            if ($k == 'menu_profile_edge') {
                if ($groupId) {
                    $isActive = false;
                } else {
                    $profileTabUrl = User::getActiveProfileTabsAlias();
                    if (!$profileTabUrl) {
                        $profileTabUrl = 'profile_view';
                    }
                    $isActive = Common::isPage($profileTabUrl, true);
                }
            } else if ($k == 'menu_friends_edge') {
                $isActive = Common::isPage($data['url'], true);
            }
        } elseif($block == 'profile_menu_inner_description') {
            $ehp_id = $data['ehp_id'];
            $ehp_type = $data['ehp_type'];

            if($ehp_type == 'event') {
                $event  = CEventsTools::retrieve_event_by_id($ehp_id);
                $date = $event['event_datetime'];
                $site = $event['event_site'];
                $place = $event['event_place'];
                $phone = $event['event_phone'];
                $address = $event['event_address'];
                $description = $event['event_description'];
            } elseif ($ehp_type == 'hotdate') {
                $hotdate  = ChotdatesTools::retrieve_hotdate_by_id($ehp_id);
                $date = $hotdate['hotdate_datetime'];
                $site = $hotdate['hotdate_site'];
                $place = $hotdate['hotdate_place'];
                $phone = $hotdate['hotdate_phone'];
                $address = $hotdate['hotdate_address'];
                $description = $hotdate['hotdate_description'];
            } elseif ($ehp_type == 'partyhou') {
                $partyhou  = CpartyhouzTools::retrieve_partyhou_by_id($ehp_id);
                $date = $partyhou['partyhou_datetime'];
                $site = $partyhou['partyhou_site'];
                $place = $partyhou['partyhou_place'];
                $phone = $partyhou['partyhou_phone'];
                $address = $partyhou['partyhou_address'];
                $description = $partyhou['partyhou_description'];
            }

            $html->setvar('date', $date);
            $html->setvar('place', $place);
            $html->setvar('site', $site);
            $html->setvar('phone', $phone);
            $html->setvar('address', $address);
            $html->setvar('description', $description);
        }

        $title = '';
        if (isset($data['tooltip'])) { // && !$isActive
            //$title = $isActive ? '' : $data['tooltip'];
            $title = $data['tooltip'];
        }
        $html->setvar("{$blockItem}_tooltip", $title);
        $html->subcond($isActive, $blockItemActive);

        if (isset($data['cmd'])) {
            $html->setvar("{$blockItem}_cmd", $data['cmd']);
        } else {
            $html->setvar("{$blockItem}_cmd", '');
        }

        $html->parse("{$blockItem}_cmd");

        if (isset($data['param'])) {
            $html->setvar("{$blockItem}_param", $data['param']);
        } else {
            $html->setvar("{$blockItem}_param", '');
        }

        $html->parse($blockItem);

        return true;
    }

    public static function parseMenu(&$html, $module = '', $block = '', $maxVisibleItem = 0, $alias = '')
    {
        global $g;
        $orderItemsList = self::getOrderItemsList($module);

        if (!$html->blockExists($block) || !$orderItemsList) {
            return false;
        }

        $guid = guid();
        $uid = User::getParamUid();

        if ($module == 'member_header_menu') {
            // $html->clean("{$block}_item");
            //$html->clean("{$block}_more");
            //$html->clean($block);
        }

        $isProfileMenuInner = $block == 'profile_menu_inner_big';
        $isProfileMenuAddUploadFile = ($block == 'profile_menu_inner_big' || $block == 'profile_menu_inner_small') && $uid == $guid;
        $checkCounter = false;
        if (($isProfileMenuInner || $block == 'profile_menu_inner_small')
            && !in_array($module, array('member_profile_inner_tabs', 'member_groups_inner_tabs'))) {
            $checkCounter = true;

            $countItemsList = count($orderItemsList);
            if (!$isProfileMenuInner) {
                $i = 0;
                $orderItemsListLeft = array();
                $orderItemsListRight = array();
                foreach ($orderItemsList as $k => $item) {
                    if ($i % 2 == 0) {
                        $orderItemsListLeft[$k] = $item;
                    } else {
                        $orderItemsListRight[$k] = $item;
                    }
                    $i++;
                }
                $orderItemsList = array_merge($orderItemsListLeft, $orderItemsListRight);
            } elseif ($isProfileMenuInner
                && ($uid != $guid
                    || $countItemsList < self::$minNumberItemProfileMenuBig
                    || $countItemsList == 5)) {
                if ($uid != $guid) {

                    foreach ($orderItemsList as $k => $item) {
                        $count = self::getCountMenuItem($k);
                        $orderItemsList[$k]['count'] = $count;
                        if (!$count && !self::isMenuItemProfileTab($k)) {

                            if (!($k == 'menu_groups_like_1_edge' || $k == 'menu_inner_go_live_edge')) {
                                unset($orderItemsList[$k]);
                            }

                        }
                    }
                } else {
                    unset($orderItemsList['menu_groups_like_1_edge']);
                }

                $countItems = count($orderItemsList);
                $orderListTemp = $orderItemsList;
                if ($countItems == 1) {
                    $key = key($orderItemsList);
                    $orderItemsList = array(
                        'menu_inner_empty_1' => array('count' => 0),
                        'menu_inner_empty_2' => array('count' => 0),
                        $key => $orderItemsList[$key],
                        'menu_inner_empty_4' => array('count' => 0),
                    );
                } elseif ($countItems == 2) {
                    $orderItemsListTemp = array(
                        'menu_inner_empty_1' => array('count' => 0),
                    );
                    $orderItemsList = array_reverse($orderItemsList);
                    foreach ($orderItemsList as $key => $item) {
                        $orderItemsListTemp[$key] = $item;
                    }
                    $orderItemsListTemp['menu_inner_empty_4'] = array('count' => 0);
                    $orderItemsList = $orderItemsListTemp;
                } elseif ($countItems == 3) {
                    $orderItemsList['menu_inner_empty_4'] = array('count' => 0);
                } elseif ($countItems == 5) {
                    $orderItemsList['menu_inner_empty_6'] = array('count' => 0);
                }
            }

        }
        $i = 0;
        $j = 0;
        $blockClean = '';

        if ($uid == $guid) {
            unset($orderItemsList['menu_groups_like_1_edge']);

        }

        foreach ($orderItemsList as $k => $v) {

            $blockItem = $block;
            if ($isProfileMenuInner) {
                $html->clean($blockItem);
                if ($blockClean) {
                    $html->clean($blockClean);
                }
                $blockItem .= $i % 2 == 0 ? '_left' : '_right';
            }

            $is_abailable_go_live = true;

            if ($uid != $guid) {

                if (!($k == 'menu_inner_go_live_edge' && $orderItemsList['menu_groups_like_1_edge']['cmd'] == 'remove')) {

                    $is_abailable_go_live = false;
                }
            }

            if ($isProfileMenuInner && isset($v['count']) && !$v['count'] && !self::isMenuItemProfileTab($k) && $k != 'menu_groups_like_1_edge' && !$is_abailable_go_live) {
                $html->parse($blockClean, true);
                $isParseItem = true;
            } else {
                if ($alias) {
                    $html->setvar("{$blockItem}_item_alias", $alias);
                }

                if ($isProfileMenuAddUploadFile) {
                    if ($k == 'menu_inner_videos_edge' || $k == 'menu_inner_photos_edge'
                        || $k == 'menu_inner_songs_edge') {
                        $titleUploadIcon = l('upload_a_new_video');
                        if ($k == 'menu_inner_photos_edge') {
                            $titleUploadIcon = l('upload_a_new_image');
                        } elseif ($k == 'menu_inner_songs_edge') {
                            $titleUploadIcon = l('upload_a_new_song');
                        }
                        $html->setvar("{$blockItem}_item_upload_file_title", $titleUploadIcon);

                        $typeUploadIcon = 'video';
                        if ($k == 'menu_inner_photos_edge') {
                            $typeUploadIcon = 'photo';
                        } elseif ($k == 'menu_inner_songs_edge') {
                            $typeUploadIcon = 'song';
                        }
                        $html->setvar("{$blockItem}_item_upload_file_type", $typeUploadIcon);
                        $html->parse("{$blockItem}_item_upload_file", true);
                    }
                }

                if ($k == 'menu_inner_go_live_edge') {
                    $isParseItem = self::parseMenuItem($html, $v, 'profile_menu_inner_go_live', $k, '', $checkCounter, $j);
                } elseif ($k == 'menu_inner_description_edge') {
                    $isParseItem = self::parseMenuItem($html, $v, 'profile_menu_inner_description', $k, '', $checkCounter, $j);
                } elseif ($k == 'menu_inner_address_edge') {
                    $isParseItem = self::parseMenuItem($html, $v, 'profile_menu_inner_address', $k, '', $checkCounter, $j);
                } elseif ($k == 'menu_inner_partyhou_join_edge') {
                    $isParseItem = self::parseMenuItem($html, $v, 'profile_menu_inner_partyhou_join', $k, '', $checkCounter, $j);
                } elseif ($k == 'menu_inner_sign_edge') {
                    $isParseItem = self::parseMenuItem($html, $v, 'profile_menu_inner_sign', $k, '', $checkCounter, $j);
                } elseif ($k == 'menu_groups_like_1_edge') {
                    $isParseItem = self::parseMenuItem($html, $v, 'profile_menu_inner_join', $k, '', $checkCounter, $j);
                } else {
                    $isParseItem = self::parseMenuItem($html, $v, $blockItem, $k, '', $checkCounter, $j);
                }

                if ($isProfileMenuAddUploadFile) {
                    $html->clean("{$blockItem}_item_upload_file");
                }

                $blockClean = "{$blockItem}_item";
            }

            if ($isParseItem) {
                $j++;
            }
            if ($isProfileMenuInner) {
                $html->parse($blockItem);
            }
        }

        if ($maxVisibleItem && $orderItemsList && !$isProfileMenuInner) {
            foreach ($orderItemsList as $k => $v) {
                if ($alias) {
                    $html->setvar("{$blockItem}_item_alias", $alias);
                }
                self::parseMenuItem($html, $v, $block, $k, 'more');
            }
            $html->parse("{$block}_more", false);
        }

        $html->parse($block, false);

        return true;
    }

    public static function parseAdditionMenuCustomItems(&$html, $uid, $k, $blockItemOne, $blockCustomItem)
    {
        if ($blockCustomItem) {
            $html->clean($blockCustomItem);
            $blockCustomItem = '';
        }

        if ($k == 'menu_messages_edge' && $uid == guid()) {
            $blockCustomItem = "{$blockItemOne}_message";
            $disabled = CIm::getCountAllMsgIm() ? '' : 'disabled';
            $html->setvar("{$blockCustomItem}_disabled", $disabled);
            $html->parse($blockCustomItem);
        } elseif ($k == 'menu_live_streaming_edge' && $uid != guid()) {
            $blockCustomItem = "{$blockItemOne}_live";
            $disabled = LiveStreaming::getUserLiveNowId($uid) ? '' : 'disabled';
            $html->setvar("{$blockCustomItem}_disabled", $disabled);
            $html->parse($blockCustomItem);
        } elseif ($k == 'menu_more_list_edge') {
            $blockCustomItem = "{$blockItemOne}_more_link";
            $html->parse($blockCustomItem);
        }

        return $blockCustomItem;
    }

    public static function parseAdditionMenu(&$html, $module = '', $block = '', $maxVisibleItem = 6)
    {
        global $g;

        $orderItemsList = self::getOrderItemsList($module);

        if (!$html->blockExists($block) || !$orderItemsList) {
            return;
        }

        $uid = User::getParamUid();
        $guid = guid();

        $isProfileMenuBig = $block == 'mn_circle';
        $isProfileMenuSmall = $block == 'mn_circle_small';
        $isProfileMenu = $isProfileMenuBig || $isProfileMenuSmall;

        $numMore = 3;
        if ($isProfileMenuSmall) {
            $numMore = 2;
        }
        $i = 0;
        $classes = array('top', 'center', 'bottom', 'bottom', 'center', 'top');

        $blockMoreMenu = "{$block}_more";
        $isParseMore = false;
        $isParseMoreItem = $uid != $guid || $module == 'member_groups_additional_menu' || $module == 'member_ehp_additional_menu';
        if ($isProfileMenu && count($orderItemsList) > $maxVisibleItem
            && $isParseMoreItem) {
            $isParseMore = true;

            $orderItemsListTemp = $orderItemsList;
            $orderItemsList = array();
            foreach ($orderItemsListTemp as $k => $v) {
                if ($i == $numMore) {
                    $orderItemsList['menu_more_list_edge'] = array(
                        'url' => "#{$block}_more_list",
                        'icon' => 'fa-ellipsis-h',
                        'tooltip' => l('tooltip_more_menu'),
                    );
                }
                $orderItemsList[$k] = $v;
                $i++;
            }
        }

        $i = 0;
        $j = 3;
        $blockCustomItem = '';

        foreach ($orderItemsList as $k => $v) {
            $blockItem = $block;

            if ($isProfileMenu) {
                if ($isParseMoreItem && $isParseMore && $i > ($maxVisibleItem - 1)) {
                    $blockItemOne = "{$blockItem}_item";
                    $blockItem = $blockMoreMenu;
                } else {
                    if ($uid == $guid && $i == $maxVisibleItem) {
                        break;
                    }
                    if ($isProfileMenuBig) {
                        $blockItem .= $i < 3 ? '_left' : '_right';
                    }
                    $blockItemOne = "{$blockItem}_item";
                    if ($isProfileMenuBig) {
                        $html->setvar("{$blockItemOne}_class", $classes[$i]);
                    } else {
                        $html->setvar("{$blockItemOne}_num_order", $j--);
                    }
                }
            }

            $blockCustomItem = self::parseAdditionMenuCustomItems($html, $uid, $k, $blockItemOne, $blockCustomItem);

            $isParseItem = self::parseMenuItem($html, $v, $blockItem, $k);
            if ($isParseItem) {
                $i++;
            }
        }

        if ($isParseMore) {
            $html->parse($blockMoreMenu, false);
        }

        $html->parse($block, false);
    }

    public static function parseListAdmin(&$html)
    {
        global $g, $p, $l;

        $module = self::$module;
        $tmpl = self::$tmpl;
        $orderItemsList = self::getOrderItemsList($module, false, $tmpl, true);

        $lang = loadLanguageAdmin($l);

        if (self::$langsPage) {
            $langPage = isset($lang[self::$langsPage]) ? $lang[self::$langsPage] : array();
            $l[$p] = array_merge($l[$p], $langPage);
            $lang[$p] = array_merge($lang[$p], $langPage);
        }

        $html->setvar('current_module', $module);

        if ($module == 'member_home_page') {
            $html->parse('home_page_th', false);
            $checked = Common::getOption('set_home_page', self::$tmpl);
            $html->setvar('current_checked', $checked);
        } elseif ($module == 'member_profile_tabs' || $module == 'member_groups_tabs') {
            $html->parse('default_page_th', false);
            $option = 'set_default_profile_tab';
            if ($module == 'member_groups_tabs') {
                $option = 'set_default_groups_tab';
            }
            $checked = Common::getOption($option, self::$tmpl);
            $html->setvar('current_checked', $checked);
        }

        foreach ($orderItemsList as $k => $v) {
            $classNoSortable = '';
            $isParseStatus = true;
            if ($k == 'menu_sign_out_edge' && $module == 'member_header_menu') {
                $isParseStatus = false;
                $classNoSortable = 'no_sortable';
                $html->clean('order_item_status');
            } else {
                $html->parse('order_item_status', false);
            }

            $html->setvar('no_sortable', $classNoSortable);
            $html->setvar('menu_value', $v);
            $html->setvar('menu_key', $k);

            if ($k == 'menu_user_report_edge'
                && in_array($module, array('member_groups_visited_additional_menu', 'member_groups_visited_additional_menu_inner', 'member_groups_visited_right_column_menu'))) {
                $title = ucfirst(l('menu_user_report_groups_edge', $lang));
            } else {
                $title = ucfirst(l($k, $lang));
            }

            $html->setvar('menu_title', $title);
            if ($v['active']) {
                $html->setvar('checked', 'checked');
            } else {
                $html->setvar('checked', '');
            }
            if ($isParseStatus) {
                $html->parse('order_item_status', false);
            } else {
                $html->clean('order_item_status');
            }
            if ($module == 'member_home_page') {
                $html->parse('home_page_item', false);
            } elseif ($module == 'member_profile_tabs' || $module == 'member_groups_tabs') {
                $html->parse('default_page_item', false);
            }

            $html->parse('order_item');
        }
    }

    public function parseBlock(&$html)
    {
        if (self::$urlParams) {
            $html->setvar('url_params', self::$urlParams);
        }
        self::parseListAdmin($html);

        parent::parseBlock($html);
    }
}
